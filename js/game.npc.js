// game.npc.js

/**
 * –í—ã–≥–Ω–∞—Ç—å –≤—Å–µ—Ö NPC (–∫—Ä–æ–º–µ –ú–∞—Ä–∏–Ω—ã) –∏–∑ –∫–æ–º–Ω–∞—Ç—ã, –∫—É–¥–∞ –ø—Ä–∏—à–ª–∞ –ú–∞—Ä–∏–Ω–∞
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ú–∞—Ä–∏–Ω—ã
 */
function kickNpcsFromRoom(roomIdx) {
  npcs.forEach(npc => {
    if (
      npc.name !== '–ú–∞—Ä–∏–Ω–∞' &&
      npc.at === roomIdx
    ) {
      // –ù–∞–π—Ç–∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —É—Ö–æ–¥–∞: —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ home,
      // –∫—É–¥–∞ –µ—â—ë –Ω–µ—Ç –ú–∞—Ä–∏–Ω—ã –∏ –≥–¥–µ –ª—é–¥–µ–π (–Ω–µ —Å—á–∏—Ç–∞—è –ú–∞—Ä–∏–Ω—É) < 3
      const freeHomes = npc.home.filter(idx =>
        idx !== roomIdx &&
        npcs.filter(n => n.at === idx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length < 3 &&
        !npcs.some(n => n.at === idx && n.name === '–ú–∞—Ä–∏–Ω–∞')
      );
      if(freeHomes.length)
        npc.at = freeHomes[Math.floor(Math.random() * freeHomes.length)];
      // –ï—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ–∫—É–¥–∞ ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è.
    }
  });
}

/**
 * –ì–ª–∞–≤–Ω–æ–µ: –∑–∞–ø—É—Å–∫/–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ NPC ‚Äî –¥–≤–∏–≥–∞–µ—Ç –∏—Ö –∫–∞–∂–¥—ã–µ 1.8 —Å–µ–∫
 */
function startLoop() {
  stopLoop();
  nlooper = setInterval(()=>{
    if(player.end || dialogOpen) return;

    npcs.forEach(npc => {
      // ---------- –ú–ê–†–ò–ù–ê: –æ—Å–æ–±–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ ----------
      if (npc.name === '–ú–∞—Ä–∏–Ω–∞') {
        const oldAt = npc.at;
        const shuffled = shuffle(npc.home);
        for (let i = 0; i < shuffled.length; i++) {
          const roomIdx = shuffled[i];
          const npcsHere = npcs.filter(n => n.at === roomIdx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length;
          if (npcsHere < 3) {
            npc.at = roomIdx;
            break;
          }
        }
        if (npc.at !== oldAt) {
          kickNpcsFromRoom(npc.at);
        }
        return; // –û–±—Ä–∞–±–æ—Ç–∞–ª–∏ –ú–∞—Ä–∏–Ω—É, –Ω–µ –¥–≤–∏–≥–∞–µ–º –¥–∞–ª–µ–µ!
      }
      // ---------- –û—Å—Ç–∞–ª—å–Ω—ã–µ NPC –∏–∑–±–µ–≥–∞—é—Ç –ú–∞—Ä–∏–Ω—É ----------
      if (npc.home && Math.random() < 0.7) {
        const shuffled = shuffle(npc.home);
        for (let i = 0; i < shuffled.length; i++) {
          const roomIdx = shuffled[i];
          // –ï—Å–ª–∏ —Ç—É—Ç –ú–∞—Ä–∏–Ω–∞‚ÄØ‚Äî‚ÄØ–ø—Ä–æ–ø—É—Å–∫–∞–µ–º
          if (npcs.some(n => n.at === roomIdx && n.name === '–ú–∞—Ä–∏–Ω–∞')) continue;
          const npcsHere = npcs.filter(n => n.at === roomIdx && n !== npc && n.name !== '–ú–∞—Ä–∏–Ω–∞').length;
          if (npcsHere + 1 <= 3) {
            npc.at = roomIdx;
            break;
          }
        }
      }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏—è
    if(player.stress >= 100){
      player.end = true;
      showEvent('–í—ã —Å–≥–æ—Ä–µ–ª–∏ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞! üëé', [{text:'–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', action:resetGame}]);
    }
    renderAll();
    checkEvents();
  }, 1800);
}
