// game.npc.js

/**
 * –í—ã–≥–Ω–∞—Ç—å –≤—Å–µ—Ö NPC (–∫—Ä–æ–º–µ –ú–∞—Ä–∏–Ω—ã) –∏–∑ –∫–æ–º–Ω–∞—Ç—ã, –∫—É–¥–∞ –ø—Ä–∏—à–ª–∞ –ú–∞—Ä–∏–Ω–∞.
 * –ò—â–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã–µ home –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ NPC-¬´–∂–µ—Ä—Ç–≤—ã¬ª.
 */
function kickNpcsFromRoom(roomIdx) {
  npcs.forEach(npc => {
    if (
      npc.name !== '–ú–∞—Ä–∏–Ω–∞' &&
      npc.at === roomIdx
    ) {
      // –ù–∞—Ö–æ–¥–∏–º –≤–æ–∑–º–æ–∂–Ω—ã–µ "home" –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —É—Ö–æ–¥–∞
      const freeHomes = npc.home.filter(idx =>
        idx !== roomIdx &&
        // –í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç –ú–∞—Ä–∏–Ω—ã
        !npcs.some(n => n.at === idx && n.name === '–ú–∞—Ä–∏–Ω–∞') &&
        // –¢–∞–º –µ—â—ë –µ—Å—Ç—å –º–µ—Å—Ç–æ (–Ω–µ —Å—á–∏—Ç–∞—è –ú–∞—Ä–∏–Ω—É)
        npcs.filter(n => n.at === idx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length < 3
      );
      if (freeHomes.length) {
        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –∏–∑ —Å–≤–æ–±–æ–¥–Ω—ã—Ö home
        npc.at = freeHomes[Math.floor(Math.random() * freeHomes.length)];
      }
      // –ï—Å–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ—Ç ‚Äî NPC –æ—Å—Ç–∞—ë—Ç—Å—è, –≥–¥–µ –±—ã–ª.
    }
  });
}

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª –¥–ª—è NPC. –ó–∞–ø—É—Å–∫–∞–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –≤—Å–µ—Ö NPC —Ä–∞–∑ –≤ 1.8 —Å–µ–∫.
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ú–∞—Ä–∏–Ω—ã –∏ –≤—Å–µ—Ö –ø—Ä–æ—á–∏—Ö —Å —É—á—ë—Ç–æ–º ¬´–ø—Ä–æ–±–æ–∫¬ª –∏ –∏–∑–±–µ–≥–∞–Ω–∏—è –ú–∞—Ä–∏–Ω—ã.
 */
function startLoop() {
  stopLoop(); // –ß–∏—Å—Ç–∏–º, –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å

  nlooper = setInterval(() => {
    if (player.end || dialogOpen) return;

    npcs.forEach(npc => {
      // --------- –ú–ê–†–ò–ù–ê: –æ—Å–æ–±–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ -----------
      if (npc.name === '–ú–∞—Ä–∏–Ω–∞') {
        const oldAt = npc.at;
        // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º home –∫–æ–º–Ω–∞—Ç—ã –ú–∞—Ä–∏–Ω—ã
        const shuffled = shuffle(npc.home);
        for (let i = 0; i < shuffled.length; i++) {
          const roomIdx = shuffled[i];
          // –°—á–∏—Ç–∞–µ–º –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –ú–∞—Ä–∏–Ω—ã
          const npcsHere = npcs.filter(n => n.at === roomIdx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length;
          if (npcsHere < 3) { // –î–ª—è –Ω–µ–µ –≤–µ–∑–¥–µ –µ—Å—Ç—å –º–µ—Å—Ç–æ
            npc.at = roomIdx;
            break;
          }
        }
        if (npc.at !== oldAt) {
          // –ú–∞—Ä–∏–Ω–∞ –≤–æ—à–ª–∞ ‚Äî –≤—ã–≥–æ–Ω—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö!
          kickNpcsFromRoom(npc.at);
        }
        return; // –ë–æ–ª—å—à–µ –Ω–µ –¥–≤–∏–≥–∞–µ–º –ú–∞—Ä–∏–Ω—É
      }

      // ----- –û—Å—Ç–∞–ª—å–Ω—ã–µ NPC –∏–∑–±–µ–≥–∞—é—Ç –ú–∞—Ä–∏–Ω—É –∏ —Å–æ–±–ª—é–¥–∞—é—Ç –ø—Ä–æ–±–∫—É -----
      if (npc.home && Math.random() < 0.7) { // 70% —à–∞–Ω—Å, —á—Ç–æ NPC –ø–æ–π–¥—ë—Ç –≤ home
        const shuffled = shuffle(npc.home);
        for (let i = 0; i < shuffled.length; i++) {
          const roomIdx = shuffled[i];
          // –ï—Å–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ –ú–∞—Ä–∏–Ω–∞ ‚Äî –Ω–µ –∏–¥—ë–º!
          if (npcs.some(n => n.at === roomIdx && n.name === '–ú–∞—Ä–∏–Ω–∞')) continue;
          // –°—á–∏—Ç–∞–µ–º –≥–æ—Å—Ç–µ–π (NPC, –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ –∏ –∫—Ä–æ–º–µ –ú–∞—Ä–∏–Ω—ã)
          const npcsHere = npcs.filter(n => n.at === roomIdx && n !== npc && n.name !== '–ú–∞—Ä–∏–Ω–∞').length;
          if (npcsHere + 1 <= 3) { // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–∏—Ö–æ–¥–∞ –Ω–µ –±—É–¥–µ—Ç >3
            npc.at = roomIdx;
            break;
          }
        }
      }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞
    if (player.stress >= 100) {
      player.end = true;
      showEvent('–í—ã —Å–≥–æ—Ä–µ–ª–∏ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞! üëé', [{ text: '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ', action: resetGame }]);
    }

    renderAll();
    checkEvents();
  }, 1800);
}
