// ============= –ö–ê–†–¢–ê –õ–û–ö–ê–¶–ò–ô =============  
const ROOMS = [  
  {name:'–û—Ñ–∏—Å', icon:'üè¢', doors:[1,4], desc:'–ó–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –±—ã–≤–∞—é—Ç –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫–∏.'},  
  {name:'–ö–æ—Ä–∏–¥–æ—Ä', icon:'üö™', doors:[0,2,5], desc:'–ó–¥–µ—Å—å –≤—Å–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –∏–∑ –æ—Ñ–∏—Å–∞ –≤ –∞–∫–≤–∞—Ä–∏—É–º.'},  
  {name:'–°–∫–ª–∞–¥ 1 —ç—Ç', icon:'üì¶', doors:[1,3,6], desc:'–ú–µ—Å—Ç–æ –¥–ª—è —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∏ –ø–∞–ª–ª–µ—Ç.'},  
  {name:'–ü–†. —Ü–µ—Ö –¥–≤–µ—Ä—å', icon:'üöß', doors:[2,7], desc:'–ü—Ä–æ—Ö–æ–¥ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ.'},  
  {name:'–ê–∫–≤–∞—Ä–∏—É–º', icon:'üñ®', doors:[0,5,8], desc:'–¶–∏—Ñ—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å, —Ç—É—Ç —Ç–æ–ª–ø–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∫–æ–≤.'},  
  {name:'–ö–æ—Ä–∏–¥–æ—Ä 2', icon:'‚¨ÖÔ∏è', doors:[1,4,6], desc:'–ü—Ä–æ—Ö–æ–¥ –º–µ–∂–¥—É –∞–∫–≤–∞—Ä–∏—É–º–æ–º –∏ —Å–∫–ª–∞–¥–æ–º.'},  
  {name:'–î–≤–µ—Ä—å –Ω–∞ 2 —ç—Ç', icon:'‚¨ÜÔ∏è', doors:[2,5,9], desc:'–õ–µ—Å—Ç–Ω–∏—Ü–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–∂.'},  
  {name:'–ü—Ä–æ—Ö–æ–¥ –≤ –ø—Ä–æ–∏–∑–≤.', icon:'üöß', doors:[3,6,10], desc:'–í—Ö–æ–¥ –Ω–∞ –±–æ–ª—å—à–æ–π —Ü–µ—Ö.'},  
  {name:'–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ',icon:'üè≠',doors:[4,9,11], desc:'–®—É–º–Ω—ã–π –∑–∞–ª —Å –º–∞—à–∏–Ω–∞–º–∏, –∫–æ—Ä–æ–±–∫–∏, –ø–∞–∫–µ—Ç—ã, –ø–æ–ª–∫–∏.'},  
  {name:'–õ–∞–∫',icon:'üíß',doors:[6,8,12], desc:'–õ–∞–∫–∏—Ä–æ–≤–∫–∞, –ê–Ω—Ç–æ–Ω —á–∞—Å—Ç–µ–Ω—å–∫–æ —Ç—É—Ç.'},  
  {name:'–ü–∞–ª–ª–µ—Ç—ã',icon:'ü™µ',doors:[7,8,11], desc:'–ó–∞–≤–∞–ª–µ–Ω–æ –∫–æ—Ä–æ–±–∫–∞–º–∏.'},  
  {name:'–°–∫–ª–∞–¥ 2 —ç—Ç',icon:'üì¶',doors:[8,10], desc:'–í—Å–µ –∑–∞–ø–∞—Å—ã –∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏.'},  
  {name:'–ö–∞–±–∏–Ω–µ—Ç –±–æ—Å—Å–∞',icon:'üëî',doors:[9], desc:'–û—Ñ–∏—Å –í–∏–∫—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –¥–µ–ª.'}  
];  

// ============= NPCS =============  
// spawnDelay –∏ moveInterval –±—É–¥—É—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (spawnDelay —Ä–∞–Ω–¥–æ–º–Ω–æ, moveInterval –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞!)  
// spawnDelay –≤ —Å–∞–º–æ–º –º–∞—Å—Å–∏–≤–µ –º–æ–∂–Ω–æ –Ω–µ –∑–∞–¥–∞–≤–∞—Ç—å  
const NPCS_FULL = [  
  {  
    name:'–ö–∞—Ç—è', icon:'üë©',  
    portrait: "img/katya.jpg",  
    desc:'–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä. –í—Å–µ–≥–¥–∞ –ø—Ä–æ—Å–∏—Ç —Å–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É.',  
    type:'kvest',  
    home:[0,1],  
    workplace: 1,  
    spawn: 0,  
    moveInterval: 9000,  
    follow:false,  
    dialog1:"–ö–∞—Ç—è: –ê—É, –Ω—É —Å–¥–µ–ª–∞–π —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É.", prob1:60,  
    dialog2:"–ö–∞—Ç—è: –¢—ã —á—Ç–æ –∑–∞–±—ã–ª –ø—Ä–æ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É?", prob2:30,  
    dialog3:"–ö–∞—Ç—è: –ê—É, –±–æ–π - —à–∞—Ä—å—Å—è –±–µ–∑ —á–∏–ª–∞ –Ω–∞ —Ü–∏—Ñ—Ä—è–∫ –∏ —à–µ–∫–∞–π –º–Ω–µ —Ü–≤–µ—Ç–∫—É –ø–æ —Ñ–∞—Å—Ç—É!!!.", prob3:10  
  },  
  {  
    name:'–°–≤–µ—Ç–ª–∞–Ω–∞',icon:'üë©üèº‚Äçü¶±',  
    portrait: "img/svetlana.jpg",  
    desc:'–í–∑—Ä–æ—Å–ª–∞—è –±–æ–ª—Ç—É—à–∫–∞, –ª—é–±–∏—Ç –∑–∞–¥–µ—Ä–∂–∞—Ç—å —É –¥–≤–µ—Ä–∏ –¥–ª–∏–Ω–Ω—ã–º —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–º.',  
    type:'barrier',  
    home:[0,1],  
    workplace: 0,  
    spawn: 0,  
    moveInterval: 6000,  
    said:false,  
    dialog1:"–°–≤–µ—Ç–ª–∞–Ω–∞: –ü–æ—á–µ–º—É –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –º–æ–∏ —Ñ–∞–π–ª—ã! –ü—Ä–æ—Å—Ç–æ —Ç—ã –¥–æ–ª–∂–µ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!.", prob1:60,  
    dialog2:"–°–≤–µ—Ç–ª–∞–Ω–∞: –Ω—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–µ –Ω–∞–π—Ç–∏ –º–æ–π —Ñ–∞–π–ª...", prob2:30,  
    dialog3:"–°–≤–µ—Ç–ª–∞–Ω–∞: –∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, –º–æ—è —Å–æ—Å–µ–¥–∫–∞ –≤—è–∑–∞—Ç—å –Ω–∞—á–∞–ª–∞...", prob3:10  
  },  
  {  
    name:'–í–ª–∞–¥–∏–º–∏—Ä',icon:'üë∂',  
    portrait: "img/vladimir.jpg",  
    desc:'–ù–æ–≤—ã–π, –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è, —á—Ç–æ —Ç—É—Ç –¥–µ–ª–∞—é—Ç.',  
    type:'neutral',  
    home:[0,1,2],  
    workplace: 2,  
    spawn: 0,  
    moveInterval: 18000,  
    dialog1:"–í–ª–∞–¥–∏–º–∏—Ä: —è —Ç–∞–∫ –ø–æ–Ω–∏–º–∞—é –º—ã –≤ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏?.", prob1:60,  
    dialog2:"–í–ª–∞–¥–∏–º–∏—Ä: —è —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –º—ã –¥–µ–ª–∞–µ–º —ç—Ç–æ –≤—Å—ë?", prob2:30,  
    dialog3:"–í–ª–∞–¥–∏–º–∏—Ä: –∞ –¥–æ–∑–∞–ª–∏–≤–∫–∏ –∫—É–¥–∞ –ø–æ —Å–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º –∑–∞–ª–∏–≤–∞—Ç—å???", prob3:10  
  },  
  {  
    name:'–°–µ—Ä–≥–µ–π –ê—Å',icon:'üßì',  
    portrait: "img/sergey.jpg",  
    desc:'–°—Ç–∞—Ä—à–∏–π –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫, –≤–æ—Ä—á–∏—Ç –ø–æ –¥–µ–ª—É –æ –º–∞–∫–µ—Ç–∞—Ö –∏ –º–µ—Ç–∫–∞—Ö.',  
    type:'tip',  
    home:[2,1],  
    workplace: 2,  
    spawn: 0,  
    moveInterval: 36000,  
    said:false,  
    dialog1:"–°–µ—Ä–≥–µ–π –ê—Å: –£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤, —Å–ø–µ–∫—Ç—Ä–æ—Ñ–æ—Ç–æ–º–µ—Ç—Ä–∏—è, —Ç—Ä–∏–ø–ª–∏–∫–∞—Ç, –∫–æ–ª–æ—Ä–∏–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞, —Ñ–ª–∞–ø–ø–∏–Ω–≥, –∏–Ω—Å–ø–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–≥–æ–Ω.", prob1:60,  
    dialog2:"–°–µ—Ä–≥–µ–π –ê—Å: –ü–µ—Ä—Ü–µ–ø—Ü–∏–æ–Ω–Ω—ã–π —Ä–∏–ø, –∏–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω, —Å–ø–µ–∫—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–∞, —Ç—Ä–µ–ø–ø–∏–Ω–≥, –º–∏–∫—Ä–æ—Ä–∞—Å—Ç—Ä–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –¥–µ–Ω—Å–∏—Ç–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å, —Ä–∞—Å—Ç—Ä–æ–≤—ã–π –∫–ª–∏—Ä–∏–Ω–≥, —Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è.", prob2:30,  
    dialog3:"–°–µ—Ä–≥–µ–π –ê—Å: –ì—Ä–∞–¥—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—Ä–Ω–∏–Ω–≥–∞, —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —ç–∫—Å–ø—Ä–µ—à–µ–Ω—ã –∏–º–ø–æ–∑–∏—Ü–∏–∏, –∞–≤—Ç–æ—Ñ–ª–æ—É –≤–µ—Ä—Å—Ç–∫–∏, —Å–æ—Ä—Å–∏–Ω–≥ –æ—Ç —à—Ä–∏—Ñ—Ç–æ–≤–æ–≥–æ –ø—É–ª–∞, –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Å–ø—É—Å–∫ –ø–æ–ª–æ—Å, —ç–º–±–µ–¥–¥–∏–Ω–≥ –≥–ª–∏—Ñ–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è –ª–∏–¥–∏–Ω–≥–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π.", prob3:10  
  },  
  {  
    name:'–°–∞—à–∞ –•–∞',icon:'ü§µ',  
    portrait: "img/sasha.jpg",  
    desc:'–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫, —Å–Ω–∏–∂–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å.',  
    type:'happy',  
    home:[2,1,4],  
    workplace: 2,  
    spawn: 0,  
    moveInterval: 30000,  
    dialog1:"–°–∞—à–∞ –•–∞: –¥–∞–≤–∞–π –∫—É–ª–∞–∫.", prob1:60,  
    dialog2:"–°–∞—à–∞ –•–∞: –∞ –∫—Ç–æ –≤–æ–∑—å–º–µ—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–æ—á–∫—É —Ç–∫?", prob2:30,  
    dialog3:"–°–∞—à–∞ –•–∞: —è –≥–æ–≤–æ—Ä–∏–ª –≤–∞–º —Ä–∞–Ω—å—à–µ –ø—Ä–æ CorelDRAW...", prob3:10  
  },  
  {  
    name:'–ú–∞—Ä–∏–Ω–∞',icon:'üë©‚Äçüî¨',  
    portrait: "img/marina.jpg",  
    desc:'–ì–ª–∞–≤–Ω–∞—è –ø–æ —Ü–∏—Ñ—Ä–µ.',  
    type:'take',  
    home:[4,5],  
    workplace: 4,  
    spawn: 0,  
    moveInterval: 12000,  
    dialog1:"–ú–∞—Ä–∏–Ω–∞: –¢—ã —á—Ç–æ –µ—â–µ —Ç—É—Ç? –ü—à—ë–ª –æ—Ç —Å—é–¥–∞!", prob1:60,  
    dialog2:"–ú–∞—Ä–∏–Ω–∞: –ü–†–û–°–¢–û –£–ô–î–ò!", prob2:30,  
    dialog3:"–ú–∞—Ä–∏–Ω–∞: –ú–º–º - –∫–∞–∫–∞—è —è –∫—Ä–∞—Å–∏–≤–∞—è [–∫—Ä–∞—Å—É–µ—Ç—Å—è —É –∑–µ—Ä–∫–∞–ª–∞]", prob3:10  
  },  
  {  
    name:'–ê—Ä—Å–µ–Ω–∏–π',icon:'üßë‚Äç',  
    portrait: "img/arseny.jpg",  
    desc:'–¶–∏—Ñ—Ä–æ–≤–∏–∫, –ª—é–±–∏—Ç –ø–æ–º–æ–≥–∞—Ç—å.',  
    type:'fast',  
    home:[4,5,8],  
    workplace: 4,  
    spawn: 0,  
    moveInterval: 12000,  
    dialog1:"–ê—Ä—Å–µ–Ω–∏–π: –î–∞–≤–∞–π —è —Å–¥–µ–ª–∞—é —ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ.", prob1:60,  
    dialog2:"–ê—Ä—Å–µ–Ω–∏–π: –ü—Ä–∏–≤–µ—Ç", prob2:30,  
    dialog3:"–ê—Ä—Å–µ–Ω–∏–π: –µ2-–µ4... –º–∞—Ç.", prob3:10  
  },  
  {  
    name:'–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä',icon:'üë®‚Äçü¶≥',  
    portrait: "img/kir.jpg",  
    desc:'–°—Ç–∞—Ä—à–∏–π —Ü–∏—Ñ—Ä–æ–≤–∏–∫, –≤–µ–∑–¥–µ –±—ã–≤–∞–µ—Ç.',  
    type:'slow',  
    home:[4,5,8],  
    workplace: 4,  
    spawn: 0,  
    moveInterval: 6000,  
    dialog1:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –í–æ—Ç –≤ 1978 –º—ã —Ä–µ–∑–∞–ª–∏ –ø–ª–µ–Ω–∫—É –Ω–æ–∂–Ω–∏—Ü–∞–º–∏, –º–æ–Ω—Ç–∞–∂ –¥–µ–ª–∞–ª–∏ –Ω–∞ –≤–æ—Å–∫–µ, —Ñ–æ—Ç–æ–Ω–∞–±–æ—Ä –Ω–∞ ¬´–õ–∏–Ω–æ—Ç—Ä–æ–Ω–µ¬ª, –∫—Ä–∞—Å–∫–∏ –≤—Ä—É—á–Ω—É—é –º–µ—à–∞–ª–∏, –∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –æ—Ç—Ç–∏—Å–∫ –ø—Ä–æ–≤–µ—Ä—è–ª –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –ª–∏—á–Ω–æ.", prob1:40,  
    dialog2:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –í 80-—Ö –º—ã –Ω–∞ –≥–∞–∑–µ—Ç–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏—è—Ö —Ö–∏–º–∏—é —Å–∞–º–∏ –∑–∞–º–µ—à–∏–≤–∞–ª–∏, —á—Ç–æ–± –Ω–µ –ø—É–∑—ã—Ä–∏–ª–æ, –∞ —Ç–µ–∫—Å—Ç—ã –ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã—Ö –ø–ª—ë–Ω–∫–∞—Ö —Ä–∞–π—Ç–µ—Ä–∞–º–∏, –ø–æ—Ç–æ–º –≤—Å—ë —Å—É—Ç–∫–∏ –ø–æ–¥ –ø—Ä–µ—Å—Å–æ–º –¥–µ—Ä–∂–∞–ª–∏.", prob2:30,  
    dialog3:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –ü–æ–º–Ω—é, –∫–∞–∫ –≤ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ —Å—Ç–æ—è–ª–∏ –∫–æ—Ä–æ–±–∫–∏ —Å –ø–ª—ë–Ω–∫–∞–º–∏ ‚Äî –Ω–µ —Ç–æ —á—Ç–æ —Å–µ–π—á–∞—Å –≤–∞—à–∏ —Ñ–ª–µ—à–∫–∏, –≤—Å—ë –ø–æ –ø–∞–º—è—Ç–∏, –ª–∏–Ω–µ–π–∫–æ–π –∏ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∏ –æ–¥–Ω–æ–π –ø—ã–ª–∏–Ω–∫–∏ –Ω–∞ —ç–∫—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏.", prob3:30  
  },  
  {  
    name:'–ü–æ–ª–∏–Ω–∞',icon:'üë∏',  
    portrait: "img/polina.jpg",  
    desc:'–î–µ–≤—É—à–∫–∞, —Ä–µ–¥–∫–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è.',  
    type:'chill',  
    home:[4],  
    workplace: 4,  
    spawn: 0,  
    moveInterval: 12000,  
    dialog1:"–ü–æ–ª–∏–Ω–∞: –ü–æ–∑–æ–≤–∏—Ç–µ –ê–Ω—Ç–æ–Ω–∞, —É –º–µ–Ω—è –Ω–æ–≤—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞ –ª–∏—Ü–µ!", prob1:60,  
    dialog2:"–ü–æ–ª–∏–Ω–∞: –•–∞—é—à–∫–∏", prob2:30,  
    dialog3:"–ü–æ–ª–∏–Ω–∞: –û–ø—è—Ç—å –æ–±—Ä–∞–∑—Ü—ã?", prob3:10  
  },  
  {  
    name:'–ê–Ω—Ç–æ–Ω',icon:'üíÇ‚Äç‚ôÇÔ∏è',  
    portrait: "img/anton.jpg",  
    desc:'–õ—é–±–∏—Ç –ø–µ—Ä–µ–≥–æ—Ä–∞–∂–∏–≤–∞—Ç—å –ø—É—Ç—å –≤ –ª–∞–∫.',  
    type:'lak',  
    home:[9,8],  
    workplace: 9,  
    spawn: 0,  
    moveInterval: 9000,  
    dialog1:"–ê–Ω—Ç–æ–Ω: –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!", prob1:60,  
    dialog2:"–ê–Ω—Ç–æ–Ω: –•–∞-—Ö–∞-—Ö–∞, —Ö–∏-—Ö–∏-—Ö–∏. –õ–∞–¥–Ω–æ —è –ø–æ—à–µ–ª –Ω–∞ –ª–∞–∫.", prob2:30,  
    dialog3:"–ê–Ω—Ç–æ–Ω: –ê–∞–∞–∞... –Ω–µ –≤–µ—Ä–æ—è—Ç–Ω–æ, –ª–∞–¥–Ω–æ –≤—Å–µ–º –ø–æ–∫–∞!", prob3:10  
  },  
  {  
    name:'–í–∏–∫—Ç–æ—Ä',icon:'ü¶í',  
    portrait: "img/viktor.jpg",  
    desc:'–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –±–æ—Å—Å. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç, –µ—Å–ª–∏ –Ω–µ –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.',  
    type:'boss',  
    home:[12],  
    workplace: 12,  
    spawn: 0,  
    moveInterval: 30000  
  }  
];  

const QUESTS = [  
  {name:'–¶–≤–µ—Ç–æ–ø—Ä–æ–±–∞',id:'proba',desc:'–°–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É –¥–ª—è –ö–∞—Ç–∏'},  
  {name:'–õ–∞–∫',id:'lak',desc:'–û—Ç–ª–∞–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤—Ç–æ—Ä–æ–º —ç—Ç–∞–∂–µ'},  
  {name:'–§–∏–Ω–∞–ª',id:'boss',desc:'–î–æ–π—Ç–∏ –∫ –±–æ—Å—Å—É, –ø—Ä–æ–π—Ç–∏ –±–ª–∏—Ü –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å'}  
];  

// ============= –°–û–°–¢–û–Ø–ù–ò–ï ============  
let player = {};  
let npcs = [];  
let dialogOpen = false;  

// ==== –£–¢–ò–õ–ò–¢–´ ====  
function deepClone(o){ return JSON.parse(JSON.stringify(o)); }  
function randDialog(npc){  
  let rnd = Math.random()*100;  
  if(rnd < npc.prob3) return npc.dialog3;  
  if(rnd < npc.prob3 + npc.prob2) return npc.dialog2;  
  return npc.dialog1;  
}  

// ============= –°–ü–ê–í–ù –ò –î–í–ò–ñ–ï–ù–ò–ï NPC ============  
function startAllNpcSpawns() {  
  npcs.forEach((npc, idx) => {  
    setTimeout(() => {  
      npc._spawned = true;  
      npc.at = typeof npc.spawn === "number" ? npc.spawn : 0;  
      renderAll();  
      // –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è (–∫—Ä–æ–º–µ –æ–¥–Ω–æ–π home)  
      if (npc.home && npc.home.length > 1) startNpcMovement(npc);  
    }, npc.spawnDelay);  
  });  
}  
function startNpcMovement(npc) {  
  if (npc._moveTimer) clearInterval(npc._moveTimer);  
  const interval = typeof npc.moveInterval === "number" ? npc.moveInterval : 15000;  
  npc._moveTimer = setInterval(() => {  
    if (!npc._spawned) return;  
    if (npc.name === "–ú–∞—Ä–∏–Ω–∞") return; // –ú–∞—Ä–∏–Ω–∞ –¥–≤–∏–≥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –æ—Å–æ–±–æ–π –ª–æ–≥–∏–∫–µ (kickNpcs...)  
    // –ù–∞—Ö–æ–¥–∏–º –∫—É–¥–∞ –µ—â—ë –º–æ–∂–Ω–æ  
    const currAt = npc.at;  
    const possible = npc.home.filter(idx => idx !== currAt);  
    if (!possible.length) return;  
    const next = possible[Math.floor(Math.random() * possible.length)];  
    let limit = npcs.filter(n => n._spawned && n.at === next).length;  
    if (limit >= 3) return;  
    // –ù–µ –∏–¥—ë–º –∫ –ú–∞—Ä–∏–Ω–µ  
    if (npcs.find(n => n._spawned && n.at === next && n.name === "–ú–∞—Ä–∏–Ω–∞")) return;  
    npc.at = next;  
    renderAll();  
  }, interval);  
}  


// ========== –°–¢–ê–†–¢ –ò –°–ë–†–û–° =========  
function startGame(name) {  
  player = {  
    name: name.length ? name : '–ù–æ–≤–∏—á–æ–∫',  
    at: 0, stress: 0, inventory: [],  
    busy: false, quests: { proba: false, lak: false, boss: false }, end: false  
  };  

  npcs = deepClone(NPCS_FULL).map((npc, idx) => {  
    let obj = { ...npc };  
    obj.spawnDelay = 10000 + Math.floor(Math.random() * 10001); // 10-20 —Å–µ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ  
    obj._moveTimer = null;  
    obj._spawned = false;  
    obj.at = typeof obj.spawn === "number" ? obj.spawn : 0;  
    return obj;  
  });  

  renderAll();  
  startAllNpcSpawns();  
}  

function resetGame(){  
  let n = prompt("–í–∞—à–µ –∏–º—è?","–ù–æ–≤–∏—á–æ–∫")||"–ù–æ–≤–∏—á–æ–∫";  
  document.getElementById('player-name').innerText = n;  
  startGame(n);  
}  

// ========== –†–ï–ù–î–ï–†–ò–ù–ì ==========  
function renderAll() {  
  renderMap();  
  renderQuests();  
  renderControls();  
}  
function renderMap(){  
  let html = '';  
  for(let i=0;i<ROOMS.length;++i){  
    let active = (player.at===i)?'active':'';  
    html += `<div class="room ${active}" title="${ROOMS[i].desc}">  
      <div class="room-title">${ROOMS[i].name} ${ROOMS[i].icon}</div>`;  
    html += `<div class="actors">`;  
    if(player.at===i)  
      html += `<span class="actor actor-ego" title="–≠—Ç–æ –≤—ã!">üßë‚Äçüíº<br><span class="actor-name">${player.name}</span></span>`;  
    npcs.filter(n=>n._spawned && n.at===i).forEach(npc=>{  
      html += `<span class="actor actor-npc" title="${npc.desc}">${npc.icon}<br><span class="actor-name">${npc.name}</span></span>`;  
    });  
    html += `</div><div class="doors">–î–≤–µ—Ä–∏: ${  
      ROOMS[i].doors.map(j=>ROOMS[j].name).join(', ')  
    }</div></div>`;  
  }  
  document.getElementById('map').innerHTML = html;  
  document.getElementById('stressBar').innerText = player.stress;  
  document.getElementById('item').innerText = player.inventory.length?player.inventory.join(', '):'–ø—É—Å—Ç–æ';  
}  
function renderQuests() {  
  let q = QUESTS.map(qk => `<li>${  
    qk.name  
  }: <b>${player.quests[qk.id]==='done'?'‚úÖ':(player.quests[qk.id]?'üïì':'‚ùå')}</b> ‚Äî <span class='actor-desc'>${qk.desc}</span></li>`).join('');  
  document.getElementById('questlog').innerHTML = "<ul>" + q + "</ul>";  
}  
function renderControls(){  
  let html = '';  
  let here = player.at, doors = ROOMS[here].doors;  
  doors.forEach(idx=>{  
    const npcsHere = npcs.filter(n => n._spawned && n.at === idx).length;  
    if(npcsHere + 1 > 3){  
      html += `<button class="moveBtn" disabled style="opacity:.5;cursor:not-allowed;">–í ${ROOMS[idx].name} ${ROOMS[idx].icon} (–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–æ)</button>`;  
    } else {  
      html += `<button class="moveBtn" onclick="moveTo(${idx})">–í ${ROOMS[idx].name} ${ROOMS[idx].icon}</button>`;  
    }  
  });  
  if(ROOMS[here].name==='–ê–∫–≤–∞—Ä–∏—É–º' && !player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞') && player.quests.proba==='inprogress'){  
    html += `<button class="actionBtn" onclick="makeProba()">–°–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É</button>`;  
  }  
  if(ROOMS[here].name==='–õ–∞–∫' && !player.inventory.includes('–ª–∞–∫') && player.quests.proba==='done'){  
    html += `<button class="actionBtn" onclick="makeLak()">–°–¥–µ–ª–∞—Ç—å –ª–∞–∫</button>`;  
  }  
  document.getElementById('control-panel').innerHTML = html;  
}  

// -------------- –ü–†–û–ß–ò–ï –§–£–ù–ö–¶–ò–ò –ò –õ–û–ì–ò–ö–ê -----------  

// –§—É–Ω–∫—Ü–∏—è: –ú–ê–†–ò–ù–ê —É–¥–∞–ª—è–µ—Ç NPC –∏–∑ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ
function kickNpcsFromRoom(roomIdx) {
  npcs.forEach(npc => {
    if (
      npc._spawned &&
      npc.name !== '–ú–∞—Ä–∏–Ω–∞' &&
      npc.at === roomIdx
    ) {
      // –ù–∞–π—Ç–∏ –∫—É–¥–∞ —É–π—Ç–∏: –≤ –ª—é–±—É—é —Å–≤–æ—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∫–æ–º–Ω–∞—Ç—É, –≥–¥–µ –ú–∞—Ä–∏–Ω–∞ –ù–ï –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏ –≥–¥–µ –º–µ—Å—Ç < 3
      const freeHomes = npc.home.filter(idx =>
        idx !== roomIdx &&
        npcs.filter(n => n._spawned && n.at === idx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length < 3 &&
        npcs.find(n => n._spawned && n.at === idx && n.name === '–ú–∞—Ä–∏–Ω–∞') == null
      );
      if(freeHomes.length) npc.at = freeHomes[Math.floor(Math.random() * freeHomes.length)];
      // –ï—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ–∫—É–¥–∞ –∏–¥—Ç–∏ ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –∫–æ–º–Ω–∞—Ç–µ
    }
  });
}

// --------- –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï –ò–ì–†–û–ö–ê -----------
function moveTo(idx){
  const npcsHere = npcs.filter(n => n._spawned && n.at === idx).length;
  if (npcsHere + 1 > 3) {
    showEvent('–í –∫–æ–º–Ω–∞—Ç–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π (3). –ü–æ–¥–æ–∂–¥–∏, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –≤—ã–π–¥–µ—Ç!', [{text: 'OK', action: ()=>{}}]);
    return;
  }
  player.at = idx;
  renderAll();
  checkEvents();
}

// --------- –î–ï–ô–°–¢–í–ò–Ø –í –ö–û–ú–ù–ê–¢–ê–• -----------
function makeProba(){
  player.inventory.push('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');
  showEvent('–í—ã —Å–¥–µ–ª–∞–ª–∏ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É!',[{text:'–û–∫',action:renderAll}]);
}
function makeLak(){
  player.inventory.push('–ª–∞–∫');
  showEvent('–õ–∞–∫ –ø–æ–∫—Ä—ã—Ç!', [{text:'–û–∫',action:renderAll}]);
}

// ============= –õ–û–ì–ò–ö–ê NPC, –ö–í–ï–°–¢–û–í, –°–û–ë–´–¢–ò–ô ==========  
function checkEvents(){  
  // --- –ö–ê–¢–Ø ---
  let k = npcs.find(x=>x._spawned && x.name==='–ö–∞—Ç—è');
  if(k && player.at==k.at){
    if(!player.quests.proba){
      showEventNPC(randDialog(k),[{text:'–û–∫!',action:()=>{k.follow=true;player.quests.proba='inprogress';}}],k);
      return;
    }
    if(player.quests.proba==='inprogress' && player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞')){
      showEventNPC(randDialog(k),[{text:'–û—Ç–¥–∞—Ç—å',action:()=>{k.follow=false;player.inventory = player.inventory.filter(x=>x!=='—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');player.quests.proba='done';renderAll();}}],k);
      return;
    }
  }
  // --- –°–í–ï–¢–õ–ê–ù–ê ---  
  let sv = npcs.find(x=>x._spawned && x.name==='–°–≤–µ—Ç–ª–∞–Ω–∞');
  if(sv && player.at==sv.at && !sv.said){
    player.busy=true;
    showEventNPC(randDialog(sv),
    [
      {text:'–•–æ—Ä–æ—à–æ, –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∞–º –ø–æ–º–æ—á—å',action:()=>{sv.said=true;player.busy=false;}},
      {text:'–ù–µ—Ç, —è –Ω–µ –±—É–¥—É, –∏–¥–∏—Ç–µ –∫ –í–∏–∫—Ç–æ—Ä—É!',action:()=>{sv.said=false;checkEvents();}}
    ],sv);
    return;
  }
  // --- –ú–ê–†–ò–ù–ê ---
  let mar = npcs.find(x=>x._spawned && x.name==='–ú–∞—Ä–∏–Ω–∞');
  if(mar && player.at==mar.at) {
    if(player.inventory.length){
      let lost = player.inventory.slice();
      player.inventory = [];
      player.stress += 10;
      showEventNPC(
        randDialog(mar) + `<br>–¢—ã —Ç–µ—Ä—è–µ—à—å: <b>${lost.join(', ')}</b>. (—Å—Ç—Ä–µ—Å—Å +10)`,
        [{text:'–û–∫',action:()=>{}}],
        mar
      );
    } else {
      showEventNPC(
        randDialog(mar) + "<br>–£ —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –∏–¥–∏!",
        [{text:'–û–∫',action:()=>{}}],
        mar
      );
    }
    return;
  }
  // --- –ê–†–°–ï–ù–ò–ô ---
  let ars = npcs.find(x=>x._spawned && x.name==='–ê—Ä—Å–µ–Ω–∏–π');
  if(ars && player.at==ars.at && player.quests.proba==='inprogress' && !player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞')){
    player.inventory.push('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');
    showEventNPC(randDialog(ars),[{text:'–°–ø–∞—Å–∏–±–æ',action:()=>{}}],ars);
    return;
  }
  // --- –ê–õ–ï–ö–°–ê–ù–î–† –ö–ò–† ---
  let kir = npcs.find(x=>x._spawned && x.name==='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä');
  if(kir && player.at==kir.at){
    player.stress+=15;
    showEventNPC(randDialog(kir),[{text:'–ü–æ—Å–∫–æ—Ä–µ–µ —É–π—Ç–∏',action:()=>{}}],kir);
    return;
  }
  // --- –ü–ê–õ–ò–ù–ê ---
  let pal = npcs.find(x=>x._spawned && x.name==='–ü–æ–ª–∏–Ω–∞');
  if(pal && player.at==pal.at){
    player.stress=Math.max(0,player.stress-7);
    showEventNPC(randDialog(pal), [{text:'–£–ª—ã–±–Ω—É—Ç—å—Å—è',action:()=>{}}], pal);
    return;
  }
  // --- –°–ê–®–ê –•–ê ---
  let cha = npcs.find(x=>x._spawned && x.name==='–°–∞—à–∞ –•–∞');
  if(cha && player.at==cha.at){
    player.stress=Math.max(0,player.stress-9);
    showEventNPC(randDialog(cha), [{text:'–° –∫—É–ª–∞–∫–æ–º! —Ç—ã–¥—ã—â—å!',action:()=>{}}], cha);
    return;
  }
  // --- –°–ï–†–ì–ï–ô –ê–° ---
  let serg = npcs.find(x=>x._spawned && x.name==='–°–µ—Ä–≥–µ–π –ê—Å');
  if(serg && player.at==serg.at && !serg.said){
    showEventNPC(randDialog(serg),[{text:'–ü–æ–Ω—è–ª!',action:()=>{serg.said=true;}}],serg);
    return;
  }
  // --- –í–õ–ê–î–ò–ú–ò–† ---
  let vl = npcs.find(x=>x._spawned && x.name==='–í–ª–∞–¥–∏–º–∏—Ä');
  if(vl && player.at==vl.at && !vl.said){
    showEventNPC(randDialog(vl),[{text:'–ü–æ–∂–∞–ª—É–π',action:()=>{vl.said=true;}}],vl);
    return;
  }
  // --- –ê–ù–¢–û–ù ---
  let ant = npcs.find(x=>x._spawned && x.name==='–ê–Ω—Ç–æ–Ω');
  if(ant && player.at==ant.at && player.quests.proba==='done' && !player.inventory.includes('–ª–∞–∫')){
    showEventNPC(randDialog(ant), [{text:'–ü–æ–π–¥—É –¥–µ–ª–∞—Ç—å –ª–∞–∫',action:()=>{}}], ant);
    return;
  }
  // --- –ê–ù–¢–û–ù, –ª–∞–∫ —Å–¥–∞—ë–º ---
  if(ant && player.inventory.includes('–ª–∞–∫') && player.at==ant.at){
    showEventNPC(randDialog(ant), [{text:'OK',action:()=>{
      player.inventory = player.inventory.filter(x=>x!=='–ª–∞–∫');
      player.quests.lak='done';
      renderAll();
    }}], ant);
    return;
  }
  // --- –ë–û–°–° –í–∏–∫—Ç–æ—Ä ---
  let boss = npcs.find(x=>x._spawned && x.name==='–í–∏–∫—Ç–æ—Ä');
  if(boss && player.at==boss.at){
    if(player.quests.proba==='done'&&player.quests.lak==='done'){
      startQuizBOSS(boss);
      return;
    } else {
      showEventNPC('–í–∏–∫—Ç–æ—Ä: ‚Äú–¢—ã –Ω–µ –≤—Å—ë —Å–¥–µ–ª–∞–ª.<br>–ì–¥–µ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞ –∏ –ª–∞–∫?‚Äù (–≤–µ—Ä–Ω—É—Ç—å—Å—è!)',[{text:'–£—à–µ–ª',action:()=>{player.stress+=8;}}],boss);
      return;
    }
  }
}

// ==== –ú–û–î–ê–õ–ö–ê –î–ò–ê–õ–û–ì–ê –° –§–û–¢–û NPC ===
function showEventNPC(text, opts, npc){
  dialogOpen = true;
  player.busy = true;
  document.getElementById('eventBox').style.display = 'block';
  if(npc && npc.portrait){
    document.getElementById('eventPortrait').innerHTML = `<img src="${npc.portrait}" alt="${npc.name}" style="max-width:130px;max-height:130px;border-radius:15px;box-shadow:0 2px 18px #4689ff27;margin:6px auto 9px auto;display:block;">`;
  } else {
    document.getElementById('eventPortrait').innerHTML = "";
  }
  document.getElementById('eventText').innerHTML = text;
  let html = '';
  opts.forEach((o,i)=>{ html+=`<button class="actionBtn" onclick="eventAction(${i})">${o.text}</button>`; });
  document.getElementById('eventOptions').innerHTML = html;
  window._eventOpts = opts;
}
function showEvent(text, opts){
  dialogOpen = true;
  player.busy = true;
  document.getElementById('eventBox').style.display = 'block';
  document.getElementById('eventPortrait').innerHTML = "";
  document.getElementById('eventText').innerHTML = text;
  let html = '';
  opts.forEach((o,i)=>{ html+=`<button class="actionBtn" onclick="eventAction(${i})">${o.text}</button>`; });
  document.getElementById('eventOptions').innerHTML = html;
  window._eventOpts = opts;
}
window.eventAction=function(idx){
  document.getElementById('eventBox').style.display='none';
  let fn=window._eventOpts[idx];
  if(typeof fn==='object'&&fn.action) fn=fn.action;
  if(typeof fn==='function') fn();
  player.busy=false;
  dialogOpen = false;
  renderAll();
};

// –ë–ª–∏—Ü –æ—Ç –±–æ—Å—Å–∞ -- –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, —Å–º. —Ç–≤–æ–π –∏—Å—Ö–æ–¥–Ω–∏–∫ –≤—ã—à–µ

// –®–∞—Ñ–ª (–ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ)
function shuffle(array) {
  let arr = array.slice();
  for (let i = arr.length - 1; i > 0; i--) {
    let j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

// ...–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ startQuizBOSS, legendOpen, legendClose -- –∫–∞–∫ –≤—ã—à–µ...

// –°–¢–ê–†–¢ –ò–ì–†–´
window.onload=()=>{resetGame();};
