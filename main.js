// ============= –ö–ê–†–¢–ê –õ–û–ö–ê–¶–ò–ô =============  
/**
 * Room ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏/–∫–æ–º–Ω–∞—Ç—ã
 * @typedef {Object} Room
 * @property {number} id          ‚Äî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–Ω–∞—Ç—ã
 * @property {string} name        ‚Äî –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
 * @property {string} icon        ‚Äî –≠–º–æ–¥–∑–∏ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
 * @property {number[]} doors     ‚Äî –°–ø–∏—Å–æ–∫ id —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–æ–º–Ω–∞—Ç (—Å–≤—è–∑–∏, –ø–µ—Ä–µ—Ö–æ–¥—ã)
 * @property {string} desc        ‚Äî –ö—Ä–∞—Ç–∫–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
 */

/** @type {Room[]} */
const ROOMS = [
  {id: 0, name:'–û—Ñ–∏—Å',           icon:'üè¢', doors:[1,4],     desc:'–ó–¥–µ—Å—å —Ä–∞–±–æ—Ç–∞—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º –∏ –±—ã–≤–∞—é—Ç –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫–∏.'},
  {id: 1, name:'–ö–æ—Ä–∏–¥–æ—Ä',        icon:'üö™', doors:[0,2,5],   desc:'–ó–¥–µ—Å—å –≤—Å–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –∏–∑ –æ—Ñ–∏—Å–∞ –≤ –∞–∫–≤–∞—Ä–∏—É–º.'},
  {id: 2, name:'–°–∫–ª–∞–¥ 1 —ç—Ç',     icon:'üì¶', doors:[1,3,6],   desc:'–ú–µ—Å—Ç–æ –¥–ª—è —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∏ –ø–∞–ª–ª–µ—Ç.'},
  {id: 3, name:'–ü–†. —Ü–µ—Ö –¥–≤–µ—Ä—å',  icon:'üöß', doors:[2,7],     desc:'–ü—Ä–æ—Ö–æ–¥ –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ.'},
  {id: 4, name:'–ê–∫–≤–∞—Ä–∏—É–º',       icon:'üñ®', doors:[0,5,8],   desc:'–¶–∏—Ñ—Ä–æ–≤–∞—è –ø–µ—á–∞—Ç—å, —Ç—É—Ç —Ç–æ–ª–ø–∞ —Ü–∏—Ñ—Ä–æ–≤–∏–∫–æ–≤.'},
  {id: 5, name:'–ö–æ—Ä–∏–¥–æ—Ä 2',      icon:'‚¨ÖÔ∏è', doors:[1,4,6],   desc:'–ü—Ä–æ—Ö–æ–¥ –º–µ–∂–¥—É –∞–∫–≤–∞—Ä–∏—É–º–æ–º –∏ —Å–∫–ª–∞–¥–æ–º.'},
  {id: 6, name:'–î–≤–µ—Ä—å –Ω–∞ 2 —ç—Ç',  icon:'‚¨ÜÔ∏è', doors:[2,5,9],   desc:'–õ–µ—Å—Ç–Ω–∏—Ü–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π —ç—Ç–∞–∂.'},
  {id: 7, name:'–ü—Ä–æ—Ö–æ–¥ –≤ –ø—Ä–æ–∏–∑–≤.',icon:'üöß',doors:[3,6,10],   desc:'–í—Ö–æ–¥ –Ω–∞ –±–æ–ª—å—à–æ–π —Ü–µ—Ö.'},
  {id: 8, name:'–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ',   icon:'üè≠',doors:[4,9,11],   desc:'–®—É–º–Ω—ã–π –∑–∞–ª —Å –º–∞—à–∏–Ω–∞–º–∏, –∫–æ—Ä–æ–±–∫–∏, –ø–∞–∫–µ—Ç—ã, –ø–æ–ª–∫–∏.'},
  {id: 9, name:'–õ–∞–∫',            icon:'üíß',doors:[6,8,12],   desc:'–õ–∞–∫–∏—Ä–æ–≤–∫–∞, –ê–Ω—Ç–æ–Ω —á–∞—Å—Ç–µ–Ω—å–∫–æ —Ç—É—Ç.'},
  {id:10, name:'–ü–∞–ª–ª–µ—Ç—ã',        icon:'ü™µ',doors:[7,8,11],   desc:'–ó–∞–≤–∞–ª–µ–Ω–æ –∫–æ—Ä–æ–±–∫–∞–º–∏.'},
  {id:11, name:'–°–∫–ª–∞–¥ 2 —ç—Ç',     icon:'üì¶',doors:[8,10],     desc:'–í—Å–µ –∑–∞–ø–∞—Å—ã –∏ —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∏.'},
  {id:12, name:'–ö–∞–±–∏–Ω–µ—Ç –±–æ—Å—Å–∞',  icon:'üëî',doors:[9],        desc:'–û—Ñ–∏—Å –í–∏–∫—Ç–æ—Ä–∞. –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –¥–µ–ª.'}
];


// ============= NPCS =============  

// spawnDelay –∏ moveInterval –±—É–¥—É—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (spawnDelay —Ä–∞–Ω–¥–æ–º–Ω–æ, moveInterval –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞!)  
// spawnDelay –≤ —Å–∞–º–æ–º –º–∞—Å—Å–∏–≤–µ –º–æ–∂–Ω–æ –Ω–µ –∑–∞–¥–∞–≤–∞—Ç—å  
/**
 * NPC ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @typedef {Object} NPC
 * @property {string} name           ‚Äî –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è)
 * @property {string} icon           ‚Äî –≠–º–æ–¥–∑–∏
 * @property {string} portrait       ‚Äî –ö–∞—Ä—Ç–∏–Ω–∫–∞
 * @property {string} desc           ‚Äî –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
 * @property {string} type           ‚Äî –ö–ª–∞—Å—Å/—Ç–∏–ø –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ("kvest", "barrier", ...)
 * @property {number[]} home         ‚Äî –°–ø–∏—Å–æ–∫ id –∫–æ–º–Ω–∞—Ç, –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ —Ö–æ–¥–∏—Ç NPC
 * @property {number} workplace      ‚Äî –ì–ª–∞–≤–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @property {number} spawn          ‚Äî –ì–¥–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è
 * @property {number} moveInterval   ‚Äî –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π (–º—Å)
 * @property {boolean} [follow]      ‚Äî –°–ª–µ–¥—É–µ—Ç –ª–∏ –∑–∞ –∏–≥—Ä–æ–∫–æ–º (–¥–ª—è –ª–æ–≥–∏–∫–∏)
 * @property {boolean} [said]        ‚Äî –ì–æ–≤–æ—Ä–∏–ª –ª–∏ —Å—é–∂–µ—Ç–Ω—É—é —Ñ—Ä–∞–∑—É (–¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤)
 * @property {string} [dialog1]      ‚Äî –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ñ—Ä–∞–∑—ã
 * @property {number} [prob1]
 * @property {string} [dialog2]
 * @property {number} [prob2]
 * @property {string} [dialog3]
 * @property {number} [prob3]
 */

/** @type {NPC[]} */
const NPCS_FULL = [
  {
    name:'–ö–∞—Ç—è', icon:'üë©',
    portrait: "img/katya.jpg",
    desc:'–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä. –í—Å–µ–≥–¥–∞ –ø—Ä–æ—Å–∏—Ç —Å–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É.',
    type:'kvest',
    home:[0,1],
    workplace: 1,
    spawn: 0,
    moveInterval: 9000,
    follow:false,
    dialog1:"–ö–∞—Ç—è: –ê—É, –Ω—É —Å–¥–µ–ª–∞–π —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É.", prob1:60,
    dialog2:"–ö–∞—Ç—è: –¢—ã —á—Ç–æ –∑–∞–±—ã–ª –ø—Ä–æ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É?", prob2:30,
    dialog3:"–ö–∞—Ç—è: –ê—É, –±–æ–π - —à–∞—Ä—å—Å—è –±–µ–∑ —á–∏–ª–∞ –Ω–∞ —Ü–∏—Ñ—Ä—è–∫ –∏ —à–µ–∫–∞–π –º–Ω–µ —Ü–≤–µ—Ç–∫—É –ø–æ —Ñ–∞—Å—Ç—É!!!.", prob3:10
  },
  {
    name:'–°–≤–µ—Ç–ª–∞–Ω–∞', icon:'üë©üèº‚Äçü¶±',
    portrait: "img/svetlana.jpg",
    desc:'–í–∑—Ä–æ—Å–ª–∞—è –±–æ–ª—Ç—É—à–∫–∞, –ª—é–±–∏—Ç –∑–∞–¥–µ—Ä–∂–∞—Ç—å —É –¥–≤–µ—Ä–∏ –¥–ª–∏–Ω–Ω—ã–º —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–º.',
    type:'barrier',
    home:[0,1],
    workplace: 0,
    spawn: 0,
    moveInterval: 6000,
    said:false,
    dialog1:"–°–≤–µ—Ç–ª–∞–Ω–∞: –ü–æ—á–µ–º—É –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –º–æ–∏ —Ñ–∞–π–ª—ã! –ü—Ä–æ—Å—Ç–æ —Ç—ã –¥–æ–ª–∂–µ–Ω —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å!.", prob1:60,
    dialog2:"–°–≤–µ—Ç–ª–∞–Ω–∞: –Ω—É –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã–ª–æ –Ω–µ –Ω–∞–π—Ç–∏ –º–æ–π —Ñ–∞–π–ª...", prob2:30,
    dialog3:"–°–≤–µ—Ç–ª–∞–Ω–∞: –∞ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, –º–æ—è —Å–æ—Å–µ–¥–∫–∞ –≤—è–∑–∞—Ç—å –Ω–∞—á–∞–ª–∞...", prob3:10
  },
  {
    name:'–í–ª–∞–¥–∏–º–∏—Ä', icon:'üë∂',
    portrait: "img/vladimir.jpg",
    desc:'–ù–æ–≤—ã–π, –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è, —á—Ç–æ —Ç—É—Ç –¥–µ–ª–∞—é—Ç.',
    type:'neutral',
    home:[0,1,2],
    workplace: 2,
    spawn: 0,
    moveInterval: 18000,
    dialog1:"–í–ª–∞–¥–∏–º–∏—Ä: —è —Ç–∞–∫ –ø–æ–Ω–∏–º–∞—é –º—ã –≤ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏?.", prob1:60,
    dialog2:"–í–ª–∞–¥–∏–º–∏—Ä: —è —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –º—ã –¥–µ–ª–∞–µ–º —ç—Ç–æ –≤—Å—ë?", prob2:30,
    dialog3:"–í–ª–∞–¥–∏–º–∏—Ä: –∞ –¥–æ–∑–∞–ª–∏–≤–∫–∏ –∫—É–¥–∞ –ø–æ —Å–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º –∑–∞–ª–∏–≤–∞—Ç—å???", prob3:10
  },
  {
    name:'–°–µ—Ä–≥–µ–π –ê—Å', icon:'üßì',
    portrait: "img/sergey.jpg",
    desc:'–°—Ç–∞—Ä—à–∏–π –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫, –≤–æ—Ä—á–∏—Ç –ø–æ –¥–µ–ª—É –æ –º–∞–∫–µ—Ç–∞—Ö –∏ –º–µ—Ç–∫–∞—Ö.',
    type:'tip',
    home:[2,1],
    workplace: 2,
    spawn: 0,
    moveInterval: 36000,
    said:false,
    dialog1:"–°–µ—Ä–≥–µ–π –ê—Å: –£–≤–ª–∞–∂–Ω–µ–Ω–∏–µ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤, —Å–ø–µ–∫—Ç—Ä–æ—Ñ–æ—Ç–æ–º–µ—Ç—Ä–∏—è, —Ç—Ä–∏–ø–ª–∏–∫–∞—Ç, –∫–æ–ª–æ—Ä–∏–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞, —Ñ–ª–∞–ø–ø–∏–Ω–≥, –∏–Ω—Å–ø–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –ø—Ä–æ–≥–æ–Ω.", prob1:60,
    dialog2:"–°–µ—Ä–≥–µ–π –ê—Å: –ü–µ—Ä—Ü–µ–ø—Ü–∏–æ–Ω–Ω—ã–π —Ä–∏–ø, –∏–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω, —Å–ø–µ–∫—Ç—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–∞, —Ç—Ä–µ–ø–ø–∏–Ω–≥, –º–∏–∫—Ä–æ—Ä–∞—Å—Ç—Ä–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –¥–µ–Ω—Å–∏—Ç–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å, —Ä–∞—Å—Ç—Ä–æ–≤—ã–π –∫–ª–∏—Ä–∏–Ω–≥, —Å—Ç–æ—Ö–∞—Å—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è.", prob2:30,
    dialog3:"–°–µ—Ä–≥–µ–π –ê—Å: –ì—Ä–∞–¥—É–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—Ä–Ω–∏–Ω–≥–∞, —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —ç–∫—Å–ø—Ä–µ—à–µ–Ω—ã –∏–º–ø–æ–∑–∏—Ü–∏–∏, –∞–≤—Ç–æ—Ñ–ª–æ—É –≤–µ—Ä—Å—Ç–∫–∏, —Å–æ—Ä—Å–∏–Ω–≥ –æ—Ç —à—Ä–∏—Ñ—Ç–æ–≤–æ–≥–æ –ø—É–ª–∞, –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Å–ø—É—Å–∫ –ø–æ–ª–æ—Å, —ç–º–±–µ–¥–¥–∏–Ω–≥ –≥–ª–∏—Ñ–æ–≤, –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è –ª–∏–¥–∏–Ω–≥–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π.", prob3:10
  },
  {
    name:'–°–∞—à–∞ –•–∞', icon:'ü§µ',
    portrait: "img/sasha.jpg",
    desc:'–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π –¥–æ–ø–µ—á–∞—Ç–Ω–∏–∫, —Å–Ω–∏–∂–∞–µ—Ç —Å—Ç—Ä–µ—Å—Å.',
    type:'happy',
    home:[2,1,4],
    workplace: 2,
    spawn: 0,
    moveInterval: 30000,
    dialog1:"–°–∞—à–∞ –•–∞: –¥–∞–≤–∞–π –∫—É–ª–∞–∫.", prob1:60,
    dialog2:"–°–∞—à–∞ –•–∞: –∞ –∫—Ç–æ –≤–æ–∑—å–º–µ—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–æ—á–∫—É —Ç–∫?", prob2:30,
    dialog3:"–°–∞—à–∞ –•–∞: —è –≥–æ–≤–æ—Ä–∏–ª –≤–∞–º —Ä–∞–Ω—å—à–µ –ø—Ä–æ CorelDRAW...", prob3:10
  },
  {
    name:'–ú–∞—Ä–∏–Ω–∞', icon:'üë©‚Äçüî¨',
    portrait: "img/marina.jpg",
    desc:'–ì–ª–∞–≤–Ω–∞—è –ø–æ —Ü–∏—Ñ—Ä–µ.',
    type:'take',
    home:[4,5],
    workplace: 4,
    spawn: 0,
    moveInterval: 12000,
    dialog1:"–ú–∞—Ä–∏–Ω–∞: –¢—ã —á—Ç–æ –µ—â–µ —Ç—É—Ç? –ü—à—ë–ª –æ—Ç —Å—é–¥–∞!", prob1:60,
    dialog2:"–ú–∞—Ä–∏–Ω–∞: –ü–†–û–°–¢–û –£–ô–î–ò!", prob2:30,
    dialog3:"–ú–∞—Ä–∏–Ω–∞: –ú–º–º - –∫–∞–∫–∞—è —è –∫—Ä–∞—Å–∏–≤–∞—è [–∫—Ä–∞—Å—É–µ—Ç—Å—è —É –∑–µ—Ä–∫–∞–ª–∞]", prob3:10
  },
  {
    name:'–ê—Ä—Å–µ–Ω–∏–π', icon:'üßë‚Äç',
    portrait: "img/arseny.jpg",
    desc:'–¶–∏—Ñ—Ä–æ–≤–∏–∫, –ª—é–±–∏—Ç –ø–æ–º–æ–≥–∞—Ç—å.',
    type:'fast',
    home:[4,5,8],
    workplace: 4,
    spawn: 0,
    moveInterval: 12000,
    dialog1:"–ê—Ä—Å–µ–Ω–∏–π: –î–∞–≤–∞–π —è —Å–¥–µ–ª–∞—é —ç—Ç–æ –±—ã—Å—Ç—Ä–µ–µ.", prob1:60,
    dialog2:"–ê—Ä—Å–µ–Ω–∏–π: –ü—Ä–∏–≤–µ—Ç", prob2:30,
    dialog3:"–ê—Ä—Å–µ–Ω–∏–π: –µ2-–µ4... –º–∞—Ç.", prob3:10
  },
  {
    name:'–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä', icon:'üë®‚Äçü¶≥',
    portrait: "img/kir.jpg",
    desc:'–°—Ç–∞—Ä—à–∏–π —Ü–∏—Ñ—Ä–æ–≤–∏–∫, –≤–µ–∑–¥–µ –±—ã–≤–∞–µ—Ç.',
    type:'slow',
    home:[4,5,8],
    workplace: 4,
    spawn: 0,
    moveInterval: 6000,
    dialog1:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –í–æ—Ç –≤ 1978 –º—ã —Ä–µ–∑–∞–ª–∏ –ø–ª–µ–Ω–∫—É –Ω–æ–∂–Ω–∏—Ü–∞–º–∏, –º–æ–Ω—Ç–∞–∂ –¥–µ–ª–∞–ª–∏ –Ω–∞ –≤–æ—Å–∫–µ, —Ñ–æ—Ç–æ–Ω–∞–±–æ—Ä –Ω–∞ ¬´–õ–∏–Ω–æ—Ç—Ä–æ–Ω–µ¬ª, –∫—Ä–∞—Å–∫–∏ –≤—Ä—É—á–Ω—É—é –º–µ—à–∞–ª–∏, –∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π –æ—Ç—Ç–∏—Å–∫ –ø—Ä–æ–≤–µ—Ä—è–ª –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤–∏—á –ª–∏—á–Ω–æ.", prob1:40,
    dialog2:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –í 80-—Ö –º—ã –Ω–∞ –≥–∞–∑–µ—Ç–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏—è—Ö —Ö–∏–º–∏—é —Å–∞–º–∏ –∑–∞–º–µ—à–∏–≤–∞–ª–∏, —á—Ç–æ–± –Ω–µ –ø—É–∑—ã—Ä–∏–ª–æ, –∞ —Ç–µ–∫—Å—Ç—ã –ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã—Ö –ø–ª—ë–Ω–∫–∞—Ö —Ä–∞–π—Ç–µ—Ä–∞–º–∏, –ø–æ—Ç–æ–º –≤—Å—ë —Å—É—Ç–∫–∏ –ø–æ–¥ –ø—Ä–µ—Å—Å–æ–º –¥–µ—Ä–∂–∞–ª–∏.", prob2:30,
    dialog3:"–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä: –ü–æ–º–Ω—é, –∫–∞–∫ –≤ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ —Å—Ç–æ—è–ª–∏ –∫–æ—Ä–æ–±–∫–∏ —Å –ø–ª—ë–Ω–∫–∞–º–∏ ‚Äî –Ω–µ —Ç–æ —á—Ç–æ —Å–µ–π—á–∞—Å –≤–∞—à–∏ —Ñ–ª–µ—à–∫–∏, –≤—Å—ë –ø–æ –ø–∞–º—è—Ç–∏, –ª–∏–Ω–µ–π–∫–æ–π –∏ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–∏ –æ–¥–Ω–æ–π –ø—ã–ª–∏–Ω–∫–∏ –Ω–∞ —ç–∫—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏.", prob3:30
  },
  {
    name:'–ü–æ–ª–∏–Ω–∞', icon:'üë∏',
    portrait: "img/polina.jpg",
    desc:'–î–µ–≤—É—à–∫–∞, —Ä–µ–¥–∫–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è.',
    type:'chill',
    home:[4],
    workplace: 4,
    spawn: 0,
    moveInterval: 12000,
    dialog1:"–ü–æ–ª–∏–Ω–∞: –ü–æ–∑–æ–≤–∏—Ç–µ –ê–Ω—Ç–æ–Ω–∞, —É –º–µ–Ω—è –Ω–æ–≤—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞ –ª–∏—Ü–µ!", prob1:60,
    dialog2:"–ü–æ–ª–∏–Ω–∞: –•–∞—é—à–∫–∏", prob2:30,
    dialog3:"–ü–æ–ª–∏–Ω–∞: –û–ø—è—Ç—å –æ–±—Ä–∞–∑—Ü—ã?", prob3:10
  },
  {
    name:'–ê–Ω—Ç–æ–Ω', icon:'üíÇ‚Äç‚ôÇÔ∏è',
    portrait: "img/anton.jpg",
    desc:'–õ—é–±–∏—Ç –ø–µ—Ä–µ–≥–æ—Ä–∞–∂–∏–≤–∞—Ç—å –ø—É—Ç—å –≤ –ª–∞–∫.',
    type:'lak',
    home:[9,8],
    workplace: 9,
    spawn: 0,
    moveInterval: 9000,
    dialog1:"–ê–Ω—Ç–æ–Ω: –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!", prob1:60,
    dialog2:"–ê–Ω—Ç–æ–Ω: –•–∞-—Ö–∞-—Ö–∞, —Ö–∏-—Ö–∏-—Ö–∏. –õ–∞–¥–Ω–æ —è –ø–æ—à–µ–ª –Ω–∞ –ª–∞–∫.", prob2:30,
    dialog3:"–ê–Ω—Ç–æ–Ω: –ê–∞–∞–∞... –Ω–µ –≤–µ—Ä–æ—è—Ç–Ω–æ, –ª–∞–¥–Ω–æ –≤—Å–µ–º –ø–æ–∫–∞!", prob3:10
  },
  {
    name:'–í–∏–∫—Ç–æ—Ä', icon:'ü¶í',
    portrait: "img/viktor.jpg",
    desc:'–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –±–æ—Å—Å. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç, –µ—Å–ª–∏ –Ω–µ –≤—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.',
    type:'boss',
    home:[12],
    workplace: 12,
    spawn: 0,
    moveInterval: 30000
  }
];


// ============= –ö–í–ï–°–¢–´ ============  
/**
 * Quest ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è/–∫–≤–µ—Å—Ç–∞.
 * @typedef {Object} Quest
 * @property {string} name ‚Äî –ö—Ä–∞—Ç–∫–æ–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
 * @property {string} id   ‚Äî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏–∫–∏ –∏–≥—Ä—ã
 * @property {string} desc ‚Äî –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
 */
/** @type {Quest[]} */
const QUESTS = [
  { name: '–¶–≤–µ—Ç–æ–ø—Ä–æ–±–∞', id: 'proba', desc: '–°–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É –¥–ª—è –ö–∞—Ç–∏' },
  { name: '–õ–∞–∫', id: 'lak', desc: '–û—Ç–ª–∞–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤—Ç–æ—Ä–æ–º —ç—Ç–∞–∂–µ' },
  { name: '–§–∏–Ω–∞–ª', id: 'boss', desc: '–î–æ–π—Ç–∏ –∫ –±–æ—Å—Å—É, –ø—Ä–æ–π—Ç–∏ –±–ª–∏—Ü –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å' }
];


// ============= –°–û–°–¢–û–Ø–ù–ò–ï ============  
/**
 * Player ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∏–≥—Ä–æ–∫–∞
 * @typedef {Object} Player
 * @property {string} name                   ‚Äî –ò–º—è –∏–≥—Ä–æ–∫–∞/–ø–µ—Ä—Å–æ–Ω–∞–∂–∞
 * @property {number} at                     ‚Äî –õ–æ–∫–∞—Ü–∏—è (id –∫–æ–º–Ω–∞—Ç—ã)
 * @property {number} stress                 ‚Äî –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞
 * @property {string[]} inventory            ‚Äî –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
 * @property {boolean} busy                  ‚Äî –§–ª–∞–≥ "–∑–∞–Ω—è—Ç" (–∞–Ω–∏–º–∞—Ü–∏—è, –¥–∏–∞–ª–æ–≥ –∏ —Ç.–ø.)
 * @property {{[questId:string]:false|"inprogress"|"done"}} quests ‚Äî –°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–≤–µ—Å—Ç–æ–≤
 * @property {boolean} end                   ‚Äî –ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞
 */

/**
 * GameState ‚Äî –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
 * @typedef {Object} GameState
 * @property {Player} player
 * @property {NPC[]} npcs
 * @property {boolean} dialogOpen
 */

/** @type {GameState} */
const gameState = {
  player: {
    name: '–ù–æ–≤–∏—á–æ–∫',
    at: 0,
    stress: 0,
    inventory: [],
    busy: false,
    quests: {
      proba: false,
      lak: false,
      boss: false
    },
    end: false
  },
  npcs: [],
  dialogOpen: false
};

// ==== –£–¢–ò–õ–ò–¢–´ ====  
/**
 * –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞/–º–∞—Å—Å–∏–≤–∞ (–±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–π)
 * @param {any} o
 * @returns {any}
 */
function deepClone(o) {
  return JSON.parse(JSON.stringify(o));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É NPC –ø–æ –≤–µ—Å—É –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π
 * @param {NPC} npc
 * @returns {string}
 */
function randDialog(npc) {
  const rnd = Math.random() * 100;
  if(rnd < npc.prob3) return npc.dialog3;
  if(rnd < (npc.prob3 + npc.prob2)) return npc.dialog2;
  return npc.dialog1;
}

/**
 * –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π)
 * @template T
 * @param {T[]} array
 * @returns {T[]}
 */
function shuffle(array) {
  const arr = array.slice();
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

// ============= –°–ü–ê–í–ù –ò –î–í–ò–ñ–ï–ù–ò–ï NPC ============  
function startAllNpcSpawns() {  
  npcs.forEach((npc, idx) => {  
    setTimeout(() => {  
      npc._spawned = true;  
      npc.at = typeof npc.spawn === "number" ? npc.spawn : 0;  
      renderAll();  
      // –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è (–∫—Ä–æ–º–µ –æ–¥–Ω–æ–π home)  
      if (npc.home && npc.home.length > 1) startNpcMovement(npc);  
    }, npc.spawnDelay);  
  });  
}  
function startNpcMovement(npc) {  
  if (npc._moveTimer) clearInterval(npc._moveTimer);  
  const interval = typeof npc.moveInterval === "number" ? npc.moveInterval : 15000;  
  npc._moveTimer = setInterval(() => {  
    if (!npc._spawned) return;  
    if (npc.name === "–ú–∞—Ä–∏–Ω–∞") return; // –ú–∞—Ä–∏–Ω–∞ –¥–≤–∏–≥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –æ—Å–æ–±–æ–π –ª–æ–≥–∏–∫–µ (kickNpcs...)  
    // –ù–∞—Ö–æ–¥–∏–º –∫—É–¥–∞ –µ—â—ë –º–æ–∂–Ω–æ  
    const currAt = npc.at;  
    const possible = npc.home.filter(idx => idx !== currAt);  
    if (!possible.length) return;  
    const next = possible[Math.floor(Math.random() * possible.length)];  
    let limit = npcs.filter(n => n._spawned && n.at === next).length;  
    if (limit >= 3) return;  
    // –ù–µ –∏–¥—ë–º –∫ –ú–∞—Ä–∏–Ω–µ  
    if (npcs.find(n => n._spawned && n.at === next && n.name === "–ú–∞—Ä–∏–Ω–∞")) return;  
    npc.at = next;  
    renderAll();  
  }, interval);  
}  


// ========== –°–¢–ê–†–¢ –ò –°–ë–†–û–° =========  
function startGame(name) {  
  player = {  
    name: name.length ? name : '–ù–æ–≤–∏—á–æ–∫',  
    at: 0, stress: 0, inventory: [],  
    busy: false, quests: { proba: false, lak: false, boss: false }, end: false  
  };  

  npcs = deepClone(NPCS_FULL).map((npc, idx) => {  
    let obj = { ...npc };  
    obj.spawnDelay = 10000 + Math.floor(Math.random() * 10001); // 10-20 —Å–µ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ  
    obj._moveTimer = null;  
    obj._spawned = false;  
    obj.at = typeof obj.spawn === "number" ? obj.spawn : 0;  
    return obj;  
  });  

  renderAll();  
  startAllNpcSpawns();  
}  

function resetGame(){  
  let n = prompt("–í–∞—à–µ –∏–º—è?","–ù–æ–≤–∏—á–æ–∫")||"–ù–æ–≤–∏—á–æ–∫";  
  document.getElementById('player-name').innerText = n;  
  startGame(n);  
}  

// ========== –†–ï–ù–î–ï–†–ò–ù–ì ==========  
function renderAll() {  
  renderMap();  
  renderQuests();  
  renderControls();  
}  
function renderMap(){  
  let html = '';  
  for(let i=0;i<ROOMS.length;++i){  
    let active = (player.at===i)?'active':'';  
    html += `<div class="room ${active}" title="${ROOMS[i].desc}">  
      <div class="room-title">${ROOMS[i].name} ${ROOMS[i].icon}</div>`;  
    html += `<div class="actors">`;  
    if(player.at===i)  
      html += `<span class="actor actor-ego" title="–≠—Ç–æ –≤—ã!">üßë‚Äçüíº<br><span class="actor-name">${player.name}</span></span>`;  
    npcs.filter(n=>n._spawned && n.at===i).forEach(npc=>{  
      html += `<span class="actor actor-npc" title="${npc.desc}">${npc.icon}<br><span class="actor-name">${npc.name}</span></span>`;  
    });  
    html += `</div><div class="doors">–î–≤–µ—Ä–∏: ${  
      ROOMS[i].doors.map(j=>ROOMS[j].name).join(', ')  
    }</div></div>`;  
  }  
  document.getElementById('map').innerHTML = html;  
  document.getElementById('stressBar').innerText = player.stress;  
  document.getElementById('item').innerText = player.inventory.length?player.inventory.join(', '):'–ø—É—Å—Ç–æ';  
}  
function renderQuests() {  
  let q = QUESTS.map(qk => `<li>${  
    qk.name  
  }: <b>${player.quests[qk.id]==='done'?'‚úÖ':(player.quests[qk.id]?'üïì':'‚ùå')}</b> ‚Äî <span class='actor-desc'>${qk.desc}</span></li>`).join('');  
  document.getElementById('questlog').innerHTML = "<ul>" + q + "</ul>";  
}  
function renderControls(){  
  let html = '';  
  let here = player.at, doors = ROOMS[here].doors;  
  doors.forEach(idx=>{  
    const npcsHere = npcs.filter(n => n._spawned && n.at === idx).length;  
    if(npcsHere + 1 > 3){  
      html += `<button class="moveBtn" disabled style="opacity:.5;cursor:not-allowed;">–í ${ROOMS[idx].name} ${ROOMS[idx].icon} (–ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–æ)</button>`;  
    } else {  
      html += `<button class="moveBtn" onclick="moveTo(${idx})">–í ${ROOMS[idx].name} ${ROOMS[idx].icon}</button>`;  
    }  
  });  
  if(ROOMS[here].name==='–ê–∫–≤–∞—Ä–∏—É–º' && !player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞') && player.quests.proba==='inprogress'){  
    html += `<button class="actionBtn" onclick="makeProba()">–°–¥–µ–ª–∞—Ç—å —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É</button>`;  
  }  
  if(ROOMS[here].name==='–õ–∞–∫' && !player.inventory.includes('–ª–∞–∫') && player.quests.proba==='done'){  
    html += `<button class="actionBtn" onclick="makeLak()">–°–¥–µ–ª–∞—Ç—å –ª–∞–∫</button>`;  
  }  
  document.getElementById('control-panel').innerHTML = html;  
}  

// -------------- –ü–†–û–ß–ò–ï –§–£–ù–ö–¶–ò–ò –ò –õ–û–ì–ò–ö–ê -----------  

// –§—É–Ω–∫—Ü–∏—è: –ú–ê–†–ò–ù–ê —É–¥–∞–ª—è–µ—Ç NPC –∏–∑ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ
function kickNpcsFromRoom(roomIdx) {
  npcs.forEach(npc => {
    if (
      npc._spawned &&
      npc.name !== '–ú–∞—Ä–∏–Ω–∞' &&
      npc.at === roomIdx
    ) {
      // –ù–∞–π—Ç–∏ –∫—É–¥–∞ —É–π—Ç–∏: –≤ –ª—é–±—É—é —Å–≤–æ—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∫–æ–º–Ω–∞—Ç—É, –≥–¥–µ –ú–∞—Ä–∏–Ω–∞ –ù–ï –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏ –≥–¥–µ –º–µ—Å—Ç < 3
      const freeHomes = npc.home.filter(idx =>
        idx !== roomIdx &&
        npcs.filter(n => n._spawned && n.at === idx && n.name !== '–ú–∞—Ä–∏–Ω–∞').length < 3 &&
        npcs.find(n => n._spawned && n.at === idx && n.name === '–ú–∞—Ä–∏–Ω–∞') == null
      );
      if(freeHomes.length) npc.at = freeHomes[Math.floor(Math.random() * freeHomes.length)];
      // –ï—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ–∫—É–¥–∞ –∏–¥—Ç–∏ ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –∫–æ–º–Ω–∞—Ç–µ
    }
  });
}

// --------- –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï –ò–ì–†–û–ö–ê -----------
function moveTo(idx){
  const npcsHere = npcs.filter(n => n._spawned && n.at === idx).length;
  if (npcsHere + 1 > 3) {
    showEvent('–í –∫–æ–º–Ω–∞—Ç–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π (3). –ü–æ–¥–æ–∂–¥–∏, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –≤—ã–π–¥–µ—Ç!', [{text: 'OK', action: ()=>{}}]);
    return;
  }
  player.at = idx;
  renderAll();
  checkEvents();
}

// --------- –î–ï–ô–°–¢–í–ò–Ø –í –ö–û–ú–ù–ê–¢–ê–• -----------
function makeProba(){
  player.inventory.push('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');
  showEvent('–í—ã —Å–¥–µ–ª–∞–ª–∏ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±—É!',[{text:'–û–∫',action:renderAll}]);
}
function makeLak(){
  player.inventory.push('–ª–∞–∫');
  showEvent('–õ–∞–∫ –ø–æ–∫—Ä—ã—Ç!', [{text:'–û–∫',action:renderAll}]);
}

// ============= –õ–û–ì–ò–ö–ê NPC, –ö–í–ï–°–¢–û–í, –°–û–ë–´–¢–ò–ô ==========  
function checkEvents(){  
  // --- –ö–ê–¢–Ø ---
  let k = npcs.find(x=>x._spawned && x.name==='–ö–∞—Ç—è');
  if(k && player.at==k.at){
    if(!player.quests.proba){
      showEventNPC(randDialog(k),[{text:'–û–∫!',action:()=>{k.follow=true;player.quests.proba='inprogress';}}],k);
      return;
    }
    if(player.quests.proba==='inprogress' && player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞')){
      showEventNPC(randDialog(k),[{text:'–û—Ç–¥–∞—Ç—å',action:()=>{k.follow=false;player.inventory = player.inventory.filter(x=>x!=='—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');player.quests.proba='done';renderAll();}}],k);
      return;
    }
  }
  // --- –°–í–ï–¢–õ–ê–ù–ê ---  
  let sv = npcs.find(x=>x._spawned && x.name==='–°–≤–µ—Ç–ª–∞–Ω–∞');
  if(sv && player.at==sv.at && !sv.said){
    player.busy=true;
    showEventNPC(randDialog(sv),
    [
      {text:'–•–æ—Ä–æ—à–æ, –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∞–º –ø–æ–º–æ—á—å',action:()=>{sv.said=true;player.busy=false;}},
      {text:'–ù–µ—Ç, —è –Ω–µ –±—É–¥—É, –∏–¥–∏—Ç–µ –∫ –í–∏–∫—Ç–æ—Ä—É!',action:()=>{sv.said=false;checkEvents();}}
    ],sv);
    return;
  }
  // --- –ú–ê–†–ò–ù–ê ---
  let mar = npcs.find(x=>x._spawned && x.name==='–ú–∞—Ä–∏–Ω–∞');
  if(mar && player.at==mar.at) {
    if(player.inventory.length){
      let lost = player.inventory.slice();
      player.inventory = [];
      player.stress += 10;
      showEventNPC(
        randDialog(mar) + `<br>–¢—ã —Ç–µ—Ä—è–µ—à—å: <b>${lost.join(', ')}</b>. (—Å—Ç—Ä–µ—Å—Å +10)`,
        [{text:'–û–∫',action:()=>{}}],
        mar
      );
    } else {
      showEventNPC(
        randDialog(mar) + "<br>–£ —Ç–µ–±—è –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, –∏–¥–∏!",
        [{text:'–û–∫',action:()=>{}}],
        mar
      );
    }
    return;
  }
  // --- –ê–†–°–ï–ù–ò–ô ---
  let ars = npcs.find(x=>x._spawned && x.name==='–ê—Ä—Å–µ–Ω–∏–π');
  if(ars && player.at==ars.at && player.quests.proba==='inprogress' && !player.inventory.includes('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞')){
    player.inventory.push('—Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞');
    showEventNPC(randDialog(ars),[{text:'–°–ø–∞—Å–∏–±–æ',action:()=>{}}],ars);
    return;
  }
  // --- –ê–õ–ï–ö–°–ê–ù–î–† –ö–ò–† ---
  let kir = npcs.find(x=>x._spawned && x.name==='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ö–∏—Ä');
  if(kir && player.at==kir.at){
    player.stress+=15;
    showEventNPC(randDialog(kir),[{text:'–ü–æ—Å–∫–æ—Ä–µ–µ —É–π—Ç–∏',action:()=>{}}],kir);
    return;
  }
  // --- –ü–ê–õ–ò–ù–ê ---
  let pal = npcs.find(x=>x._spawned && x.name==='–ü–æ–ª–∏–Ω–∞');
  if(pal && player.at==pal.at){
    player.stress=Math.max(0,player.stress-7);
    showEventNPC(randDialog(pal), [{text:'–£–ª—ã–±–Ω—É—Ç—å—Å—è',action:()=>{}}], pal);
    return;
  }
  // --- –°–ê–®–ê –•–ê ---
  let cha = npcs.find(x=>x._spawned && x.name==='–°–∞—à–∞ –•–∞');
  if(cha && player.at==cha.at){
    player.stress=Math.max(0,player.stress-9);
    showEventNPC(randDialog(cha), [{text:'–° –∫—É–ª–∞–∫–æ–º! —Ç—ã–¥—ã—â—å!',action:()=>{}}], cha);
    return;
  }
  // --- –°–ï–†–ì–ï–ô –ê–° ---
  let serg = npcs.find(x=>x._spawned && x.name==='–°–µ—Ä–≥–µ–π –ê—Å');
  if(serg && player.at==serg.at && !serg.said){
    showEventNPC(randDialog(serg),[{text:'–ü–æ–Ω—è–ª!',action:()=>{serg.said=true;}}],serg);
    return;
  }
  // --- –í–õ–ê–î–ò–ú–ò–† ---
  let vl = npcs.find(x=>x._spawned && x.name==='–í–ª–∞–¥–∏–º–∏—Ä');
  if(vl && player.at==vl.at && !vl.said){
    showEventNPC(randDialog(vl),[{text:'–ü–æ–∂–∞–ª—É–π',action:()=>{vl.said=true;}}],vl);
    return;
  }
  // --- –ê–ù–¢–û–ù ---
  let ant = npcs.find(x=>x._spawned && x.name==='–ê–Ω—Ç–æ–Ω');
  if(ant && player.at==ant.at && player.quests.proba==='done' && !player.inventory.includes('–ª–∞–∫')){
    showEventNPC(randDialog(ant), [{text:'–ü–æ–π–¥—É –¥–µ–ª–∞—Ç—å –ª–∞–∫',action:()=>{}}], ant);
    return;
  }
  // --- –ê–ù–¢–û–ù, –ª–∞–∫ —Å–¥–∞—ë–º ---
  if(ant && player.inventory.includes('–ª–∞–∫') && player.at==ant.at){
    showEventNPC(randDialog(ant), [{text:'OK',action:()=>{
      player.inventory = player.inventory.filter(x=>x!=='–ª–∞–∫');
      player.quests.lak='done';
      renderAll();
    }}], ant);
    return;
  }
  // --- –ë–û–°–° –í–∏–∫—Ç–æ—Ä ---
  let boss = npcs.find(x=>x._spawned && x.name==='–í–∏–∫—Ç–æ—Ä');
  if(boss && player.at==boss.at){
    if(player.quests.proba==='done'&&player.quests.lak==='done'){
      startQuizBOSS(boss);
      return;
    } else {
      showEventNPC('–í–∏–∫—Ç–æ—Ä: ‚Äú–¢—ã –Ω–µ –≤—Å—ë —Å–¥–µ–ª–∞–ª.<br>–ì–¥–µ —Ü–≤–µ—Ç–æ–ø—Ä–æ–±–∞ –∏ –ª–∞–∫?‚Äù (–≤–µ—Ä–Ω—É—Ç—å—Å—è!)',[{text:'–£—à–µ–ª',action:()=>{player.stress+=8;}}],boss);
      return;
    }
  }
}

// ==== –ú–û–î–ê–õ–ö–ê –î–ò–ê–õ–û–ì–ê –° –§–û–¢–û NPC ===
function showEventNPC(text, opts, npc){
  dialogOpen = true;
  player.busy = true;
  document.getElementById('eventBox').style.display = 'block';
  if(npc && npc.portrait){
    document.getElementById('eventPortrait').innerHTML = `<img src="${npc.portrait}" alt="${npc.name}" style="max-width:130px;max-height:130px;border-radius:15px;box-shadow:0 2px 18px #4689ff27;margin:6px auto 9px auto;display:block;">`;
  } else {
    document.getElementById('eventPortrait').innerHTML = "";
  }
  document.getElementById('eventText').innerHTML = text;
  let html = '';
  opts.forEach((o,i)=>{ html+=`<button class="actionBtn" onclick="eventAction(${i})">${o.text}</button>`; });
  document.getElementById('eventOptions').innerHTML = html;
  window._eventOpts = opts;
}
function showEvent(text, opts){
  dialogOpen = true;
  player.busy = true;
  document.getElementById('eventBox').style.display = 'block';
  document.getElementById('eventPortrait').innerHTML = "";
  document.getElementById('eventText').innerHTML = text;
  let html = '';
  opts.forEach((o,i)=>{ html+=`<button class="actionBtn" onclick="eventAction(${i})">${o.text}</button>`; });
  document.getElementById('eventOptions').innerHTML = html;
  window._eventOpts = opts;
}
window.eventAction=function(idx){
  document.getElementById('eventBox').style.display='none';
  let fn=window._eventOpts[idx];
  if(typeof fn==='object'&&fn.action) fn=fn.action;
  if(typeof fn==='function') fn();
  player.busy=false;
  dialogOpen = false;
  renderAll();
};

// –ë–ª–∏—Ü –æ—Ç –±–æ—Å—Å–∞ -- –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è, —Å–º. —Ç–≤–æ–π –∏—Å—Ö–æ–¥–Ω–∏–∫ –≤—ã—à–µ

// –®–∞—Ñ–ª (–ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ)
function shuffle(array) {
  let arr = array.slice();
  for (let i = arr.length - 1; i > 0; i--) {
    let j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

// ...–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ startQuizBOSS, legendOpen, legendClose -- –∫–∞–∫ –≤—ã—à–µ...

function startQuizBOSS(bossNpc){
  let questions = shuffle(BOSS_QUIZ.slice());
  let cur = 0;
  let timer = null;
  let isAnswered = false;

  function failQuiz(){
    if(timer) clearInterval(timer);
    player.quests.boss = false;
    quizInProgress = false;
    // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∏–≥—Ä–æ–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ –±–æ—Å—Å–∞
    if(lastRoomBeforeBoss !== null) {
      player.at = lastRoomBeforeBoss;
      lastRoomBeforeBoss = null;
    }
    renderAll();
    showEvent(
      `–í—ã –æ—à–∏–±–ª–∏—Å—å! –ü—Ä–æ–π—Ç–∏ –±–ª–∏—Ü –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–∑–∏—Ç–µ –∫ –±–æ—Å—Å—É.`,
      [{text:'–û–∫',action:()=>{}}],
    );
  }

  function winQuiz(){
    if(timer) clearInterval(timer);
    player.quests.boss = 'done';
    player.end = true;
    quizInProgress = false;
    renderAll();
    setTimeout(()=>{
      showEventNPC(
        `–í–∏–∫—Ç–æ—Ä: ‚Äú–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω.<br>
        <b>–¢—ã –≤—ã–∏–≥—Ä–∞–ª! üèÜ</b>"`,
        [{text:'–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ',action:resetGame}],
        bossNpc
      );
    }, 400);
  }

  function showQ() {
    if(timer) clearInterval(timer); // —Å—Ç–æ–ø, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∑–∞–ø—É—â–µ–Ω –±—ã–ª —Ä–∞–Ω–µ–µ
    isAnswered = false;
    if(cur >= 7) return winQuiz(); // 7 –≤–µ—Ä–Ω—ã—Ö –ø–æ–¥—Ä—è–¥ = –ø–æ–±–µ–¥–∞

    let timeLeft = 10;
    let q = questions[cur], vars = shuffle(q.answers.slice());

    let qt = `<b>–í–æ–ø—Ä–æ—Å ${cur+1} –∏–∑ 7:</b><br>${q.question}` +
      `<br><span style="color:#888;font-size:11px;">–í—Ä–µ–º—è: <span id="qTimer">${timeLeft}</span> —Å–µ–∫</span>`;
    let opts = vars.map(a=>({
      text: a.text,
      action: ()=>{
        if(isAnswered) return;
        isAnswered = true;
        if(timer) clearInterval(timer);
        if(a.correct){
          cur++;
          setTimeout(showQ, 300);
        } else {
          failQuiz();
        }
      }
    }));

    showEventNPC(qt, opts, bossNpc);

    timer = setInterval(()=>{
      timeLeft--;
      let t=document.getElementById('qTimer');
      if(t) t.innerText = timeLeft;
      if(timeLeft<=0 && !isAnswered){
        clearInterval(timer);
        isAnswered = true;
        failQuiz();
      }
    },1000);
  }

  showQ();
}

// --- –ë–ª–∏—Ü –≤–æ–ø—Ä–æ—Å—ã –í–∏–∫—Ç–æ—Ä–∞
const BOSS_QUIZ = [
  {
    question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç C –≤ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–µ CMYK?",
    answers: [
      { text: "C = –¶–∏–∞–Ω", correct: true },
      { text: "C = Color", correct: false },
      { text: "C = –°–∏–Ω–∏–π", correct: false },
      { text: "C = Contour", correct: false }
    ]
  },
  {
    question: "–ß—Ç–æ —Ç–∞–∫–æ–µ Pantone?",
    answers: [
      { text: "–°–ø–µ—Ü–ø–∞–ª–∏—Ç—Ä–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤", correct: true },
      { text: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç —Ü–≤–µ—Ç–æ–ø–µ—Ä–µ–¥–∞—á–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏", correct: false },
      { text: "–¶–≤–µ—Ç–æ–≤–∞—è –≥–∞–º–º–∞ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–π –±—É–º–∞–≥–∏", correct: false },
      { text: "–¢–∞–±–ª–∏—Ü–∞ –æ—Ç—Ç–µ–Ω–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–∞–∫–æ–≤—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π", correct: false }
    ]
  },
  {
    question: "–ß—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ –º–∞–∫–µ—Ç–∞ –≤ –ø–µ—á–∞—Ç—å?",
    answers: [
      { text: "CMYK, –æ–±—Ä–µ–∑–Ω—ã–µ –º–µ—Ç–∫–∏, –±–µ–∑ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–µ–π", correct: true },
      { text: "–í—ã–ø—É—Å–∫–∏ –ø–æ–¥ –æ–±—Ä–µ–∑, —Ü–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏, –±–µ–∑ –æ–±–≤–æ–¥–æ–∫", correct: false },
      { text: "CMYK, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, —Å —Ç–µ–Ω—è–º–∏ –∏ –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º", correct: false },
      { text: "–í—ã–ø—É—Å–∫–∏ –ø–æ–¥ –æ–±—Ä–µ–∑, —Ä–µ–∂—É—â–∏–µ –ª–∏–Ω–∏–∏, –±–µ–∑ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–µ–π", correct: false }
    ]
  },
  {
    question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–æ–ø–µ—á–∞—Ç–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞?",
    answers: [
      { text: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–∫–µ—Ç–∞ –ø–µ—Ä–µ–¥ –ø–µ—á–∞—Ç—å—é", correct: true },
      { text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±—É–º–∞–≥–∏ –∏ —Ä–µ–∑–∫–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏", correct: false },
      { text: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ –º–∞–∫–µ—Ç–∞ –∏ —Ç–∏–ø–∞ –ª–∞–∫–∞", correct: false },
      { text: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–≤–µ—Ç–æ–ø–µ—Ä–µ–¥–∞—á–∏ –∏ –≤—ã–ø—É—Å–∫–æ–≤ –ø–æ–¥ –æ–±—Ä–µ–∑", correct: false }
    ]
  },
  {
    question: "–ü–æ—á–µ–º—É PDF –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –¥–ª—è –æ—Ñ—Å–µ—Ç–Ω–æ–π –ø–µ—á–∞—Ç–∏?",
    answers: [
      { text: "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–µ–∫—Ç–æ—Ä –∏ —à—Ä–∏—Ñ—Ç—ã", correct: true },
      { text: "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏ –º–∞–∫–µ—Ç—ã", correct: false },
      { text: "–£–¥–æ–±–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –∏ –æ—Ç—Å—Ç—É–ø—ã", correct: false },
      { text: "–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ –º–∞–∫–µ—Ç—ã –±–µ–∑ –∏—Å–∫–∞–∂–µ–Ω–∏–π", correct: false }
    ]
  },
  {
    question: "–ó–∞—á–µ–º –Ω—É–∂–Ω—ã –ø–ª–∞—à–µ—á–Ω—ã–µ —Ü–≤–µ—Ç–∞?",
    answers: [
      { text: "–î–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ–∏—Ä–º–µ–Ω–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤", correct: true },
      { text: "–î–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã—Ö —Ç–µ–Ω–µ–π –∏ –±–ª–∏–∫–æ–≤", correct: false },
      { text: "–î–ª—è –ø–æ–¥–±–æ—Ä–∞ —Ç–æ—á–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å–º–µ—Å–µ–π –≤ –º–∞–∫–µ—Ç–µ", correct: false },
      { text: "–î–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∏–∑–∞–π–Ω–∞", correct: false }
    ]
  },
  {
    question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –ª–∞–∫–∏—Ä–æ–≤–∫–∞?",
    answers: [
      { text: "–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –∑–∞—â–∏—Ç–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è –Ω–∞ —Ç–∏—Ä–∞–∂", correct: true },
      { text: "–ü–æ–∫—Ä—ã—Ç–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–∞–≤–æ–º", correct: false },
      { text: "–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–æ–≤–æ–π –∏–ª–∏ –≥–ª—è–Ω—Ü–µ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –º–∞–∫–µ—Ç–∞", correct: false },
      { text: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø–µ—á–∞—Ç–∫–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∏–∑–Ω–æ—Å–æ—Å—Ç–æ–π–∫–æ—Å—Ç–∏", correct: false }
    ]
  }
];



function shuffle(array) {
  let arr = array.slice();
  for (let i = arr.length - 1; i > 0; i--) {
    let j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}
function startQuizBOSS(bossNpc){
  let questions = shuffle(BOSS_QUIZ.slice());
  let cur = 0;
  let timer = null;
  let isAnswered = false;

  function failQuiz(){
    if(timer) clearInterval(timer);
    player.quests.boss = false; // —Å–±—Ä–æ—Å –∫–≤–µ—Å—Ç–∞!
    player.end = false;
    dialogOpen = true;
    player.busy = true;
    showEventNPC(
      `–¢—ã –æ—à–∏–±—Å—è –∏–ª–∏ –Ω–µ —É—Å–ø–µ–ª!<br>–ì–æ—Ç–æ–≤ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞?`, 
      [{text:'–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ', action:()=> {
        dialogOpen = false;
        player.busy = false;
        startQuizBOSS(bossNpc);
      }}],
      bossNpc
    );
  }

  function winQuiz(){
    if(timer) clearInterval(timer);
    player.quests.boss = 'done';
    player.end = true;
    dialogOpen = true;
    player.busy = true;
    showEventNPC(
      `–í–∏–∫—Ç–æ—Ä: ‚Äú–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ! –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à—ë–Ω.<br>
      <b>–¢—ã –≤—ã–∏–≥—Ä–∞–ª! üèÜ</b>‚Äù`,
      [{text:'–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ',action:resetGame}],
      bossNpc
    );
  }

  function showQ() {
    if(timer) clearInterval(timer); // —Å—Ç–æ–ø, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –∑–∞–ø—É—â–µ–Ω –±—ã–ª —Ä–∞–Ω–µ–µ
    isAnswered = false;
    if(cur >= 7) return winQuiz(); // 7 –≤–µ—Ä–Ω—ã—Ö –ø–æ–¥—Ä—è–¥ = –ø–æ–±–µ–¥–∞

    let timeLeft = 10;
    let q = questions[cur], vars = shuffle(q.answers.slice());

    let qt = `<b>–í–æ–ø—Ä–æ—Å ${cur+1} –∏–∑ 7:</b><br>${q.question}` +
      `<br><span style="color:#888;font-size:11px;">–í—Ä–µ–º—è: <span id="qTimer">${timeLeft}</span> —Å–µ–∫</span>`;
    let opts = vars.map(a=>({
      text: a.text,
      action: ()=>{
        if(isAnswered) return;
        isAnswered = true;
        if(timer) clearInterval(timer);
        if(a.correct){
          cur++;
          setTimeout(showQ, 300);
        } else {
          failQuiz();
        }
      }
    }));

    showEventNPC(qt, opts, bossNpc);

    timer = setInterval(()=>{
      timeLeft--;
      let t=document.getElementById('qTimer');
      if(t) t.innerText = timeLeft;
      if(timeLeft<=0 && !isAnswered){
        clearInterval(timer);
        isAnswered = true;
        failQuiz();
      }
    },1000);
  }

  showQ();
}
// ============= –°–ü–†–ê–í–ö–ê/–õ–ï–ì–ï–ù–î–ê ==============
function legendOpen(){
  let html = "<b>–õ–æ–∫–∞—Ü–∏–∏:</b><ul>";
  ROOMS.forEach(r=>{html+=`<li><b>${r.name}</b> ${r.icon}: <span class='actor-desc'>${r.desc}</span></li>`;});
  html += "</ul><b>–ü–µ—Ä—Å–æ–Ω–∞–∂–∏:</b><ul>";
  NPCS_FULL.forEach(n=>{
    html+=`<li>${n.icon}<b> ${n.name}</b>: <span class='actor-desc'>${n.desc}</span></li>`;
  });
  html += "</ul>";
  document.getElementById("legendCont").innerHTML = html;
  document.getElementById("descModal").style.display='flex';
}
function legendClose(){
  document.getElementById("descModal").style.display='none';
}
// ============= –°–¢–ê–†–¢ ===========
window.onload=()=>{resetGame();};

